@charset "UTF-8";
.grid {
  *zoom: 1; }
  .grid:before, .grid:after {
    content: " ";
    display: table; }
  .grid:after {
    clear: both; }

input[type=file], input.pseudo-checkbox[type=checkbox], input.pseudo-radio[type=radio], .visually-hidden, .selectr-hidden {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden; }

/*
get-color($color, $value)

Función que devuelve un color de un mapa determinado

$color - Nombre del mapa
$value  - Nombre del color

Styleguide Functions.Color.getColor
*/
/*
Color

SASS functions that allow to extract colors from the palette and manipulate them.

Styleguide Functions.Color
*/
/*
tint($color, $dilution)

Sass Function extracted from compass.  Lightens the $color by mixing it with white as specified by $dilution.

$color - Color to modify
$dilution - % of white to mix

Styleguide Functions.Color.Tint
*/
/*
shade($color, $dilution)

Sass Function extracted from compass. Darkens the $color by mixing it with black as specified by $dilution.

$color - Color to modify
$dilution - % of black to mix

Styleguide Functions.Color.Shade
*/
/*
contrast-color($color, $dark, $light)

Returns a $dark or $light color value according to the background-color provided as $color.

$color - Background-color to check
$dark  - Dark color to return, defaults to $contrast-dark
$light   - Light color to return, defaults to $contrast-light

Styleguide Functions.Color.ContrastColor
*/
/*
contrast-links($color)

Returns a link formatted using `$inverse-link-` values from `_config.scss` if needed against the provided background-color.

$color - Background-color to check

Styleguide Mixins.Color.ContrastColor
*/
/*
Color

Mixins that perform color complex operations (contrasts, etc...)

Styleguide Mixins.Color
*/
/*
background-contrast($color)

Given a $color, ensures that all text elements and links are correctly contrasted against that background.

Uses contrast-color($color) SASS function to perform the lightness calculation.

$color - Background-color

Styleguide Mixins.Color.ContrastColor
*/
/*
Links

Functions that set and modify link strategies and values

Styleguide Mixins.links
*/
/*
set-link($base, $visited, $hover, $active)

Sets all link values according to global config.

$base - Base color
$visited  - Color when visited
$hover   - Color when hovered and focused
$hover   - Color when active

Styleguide Mixins.links.setLink
*/
/*
Typography

Functions that return values used on typography – other than vertical rhythm - like font-weight, letter-spacing, etc...

Styleguide Functions.Typography

*/
/*
contrast-color($item)

Checks a given HTML item against `$font-secondary-items` map in order to get the font specific font-weight.

$item - [String] - an HTMl element (without opening and closing `< >` marks)

Styleguide Functions.Typography.Bold
*/
/*
Typography

Mixins that perform typography variations and calculations.

Styleguide Mixins.Typography
*/
/*
minititle($size, $weight, $uppercase, $letter-spacing)

Formats a text to apply the <span class="minititle">minititle</span> styling, used for small headings and higly contrasted small texts.

By overriding the defaults, minititle() becomes a full-fledged tool capable of handling many of the usual modificacions of text.

$size - A valid font-size. Defaults to $h6-font-size
$weight - Font weight. Defaults to $bold
$uppercase - [Boolean] - Wether to apply `text-transform: uppercase`. Defaults to true.
$letter-spacing - A valid value for `letter-spacing`. Defaults to global `$letter-spacing`

Styleguide Mixins.Typography.Minititle
*/
/*
Color Palette

The palettes are based on palx.jxnblk.com (for example, https://palx.jxnblk.com/C7FFC4). Every single palette lives on a separate `.scss` file under 
`base/palettes` and is `@import`ed on `_config.scss` for later use on the `$colors` map.

This `$colors` map can store as many maps as needed, but the following are mandatory:

- base / for primary, secondary and separator colors
- text / for typography colors
- state / for indicating states like: muted, error, warning, success

Following palx.jxnblk.com nomenclature, the colors are numbered from 0 to 9 (lightest to darkest).

Markup:
<section>
	<p class="minititle">Base</p>
	<div class="grid grid--gutterless grid--small--2col grid--medium--6col grid--large--3col">
		<div class="grid-item p bg-base-primary">Primary</div>
		<div class="grid-item p bg-base-secondary" >Secondary</div>
		<div class="grid-item p bg-base-separator" >Separator</div>
		<div class="grid-item p bg-base-black" >Black</div>
		<div class="grid-item p bg-base-white" >White</div>
	</div>
</section>
<section>
	<p class="minititle">Text</p>
	<div class="grid grid--gutterless grid--small--2col grid--large--3col">
		<div class="grid-item p bg-text-primary">Primary</div>
		<div class="grid-item p bg-text-heading" >Heading</div>
		<div class="grid-item p bg-text-mark" >Mark</div>
	</div>
</section>
<section>
	<p class="minititle">State</p>
	<div class="grid grid--gutterless grid--small--2col grid--large--4col">
		<div class="grid-item p bg-state-muted">Muted</div>
		<div class="grid-item p bg-state-success" >Success</div>
		<div class="grid-item p bg-state-warning" >Warning</div>
		<div class="grid-item p bg-state-error" >Error</div>
	</div>
</section>

Styleguide Color.palette
*/
*,
::before,
::after {
  background-repeat: no-repeat;
  /* 1 */
  box-sizing: inherit;
  /* 2 */ }

::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */ }

html {
  box-sizing: border-box;
  /* 1 */
  cursor: default;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
  font-family: "Lato", Helvetica, Arial sans-serif;
  color: #3d3f3d; }

html {
  font-size: 100%;
  line-height: 1.35em; }

p, h1, h2, h3, h4, h5, h6,
ul, ol, dl,
article, aside, footer, header, nav, section,
figure, audio, video,
hr,
table, caption, figcaption,
fieldset,
details, details[open] summary {
  margin: 0 0 1.35rem 0; }

/*
Definition lists

By default, all `<dd>` items are spaced with a `$spacer`

Markup:
<dl>
  <dt>Definition List Title</dt>
  <dd>This is a definition list division.</dd>
  <dt>Lorem ipsum</dt>
  <dd>It's a long text in latin. For example: Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ex sed voluptates sequi doloremque repudiandae iure maxime autem nam placeat nostrum adipisci et, officia nisi consequatur animi eligendi molestias est rem.</dd>
  <dt>Huesos</dt>
  <dd>Is the spanish word for "bones". Osamenta, a rather unusual world, refers to the skeleton.</dd>
</dl>

Styleguide Base.definitionLists
*/
dt {
  margin: 0 0 0.675rem 0; }

dd {
  margin: 0 0 1.35rem 1.35rem; }

/*
Lists

By default, `$gutter` is applied as margin. Square list-style-type is preferred.

Lists are left-aligned.

Markup:
<ol class="class {{ modifier_class }}">
  <li>List Item 1</li>
  <li>List Item 2</li>
  <li>List Item 3</li>
</ol>
<ul class="class {{ modifier_class }}">
  <li>List Item 1</li>
  <li>List Item 2</li>
  <li>List Item 3</li>
</ul>

.list--inline	-  Inlines list items and removes decoration 

Styleguide Base.lists
*/
ol,
ul {
  padding-left: 0; }
  ol li,
  ul li {
    margin-bottom: 0.675rem; }

ul {
  list-style-type: square; }

.list--inline {
  margin: 0;
  padding: 0; }
  .list--inline li {
    list-style-type: none;
    display: inline-block; }

caption {
  text-align: left;
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.05em; }

/* Sections (https://html.spec.whatwg.org/multipage/semantics.html#sections)
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* Grouping content (https://html.spec.whatwg.org/multipage/semantics.html#grouping-content)
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
main {
  /* 1 */
  display: block; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
/*
Horizontal rule

Applies $separator styling defined at `_config.scss`. Eliminates ridge/bevel effects.

Markup:
<hr/>

Styleguide Base.hr
*/
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
  border: none;
  border-bottom: 1px solid #dbe2db; }

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
nav ol,
nav ul {
  list-style: none; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
/*
Pre-formatted text

Applies selected monospace and `$base-font-size`

Markup:
<pre>Hey there! I am a pre-formatted text</pre>

Styleguide Typography.pre
*/
pre {
  font-family: "Inconsolata", monospace;
  /* 1 */
  font-size: 16px;
  font-size: 1rem;
  line-height: 22px;
  line-height: 1.35rem;
  /* 2 */ }

/* Text-level semantics (https://html.spec.whatwg.org/multipage/semantics.html#text-level-semantics)
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
/*
Abbreviation

Normalizes styling (underline)

Markup:
<p>This is a clear example of a <abbr title="This Is An Abbreviation">TIAA</abbr></p>

Styleguide Typography.abbr
*/
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
/*
Bold

Applies bolding weight defined on `_config.scss` using `bold()` mixin.

Markup:
<p>An <b>emphasized</b> text and a <strong>strong</strong> one</p>

Styleguide Typography.bold
*/
b,
strong,
.strong {
  font-weight: 700; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
/*
Code, Keyboard, Samp, Var

Ensures monospaced fonts are used for computer-related text markup.

Markup:
<p>Either a sample of <code>computer code</code>, a <kbd>keyboard input</kbd>, a <var>variable</var> or a <samp>sample output from a computer program</samp>

Styleguide Typography.code
*/
code,
kbd,
samp,
var {
  font-family: "Inconsolata", monospace;
  /* 1 */
  font-size: 16px;
  font-size: 1rem;
  line-height: 22px;
  line-height: 1.35rem;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
/*
Definition

Ensures monospaced fonts are used for computer-related text markup.

Markup:
<p><dfn>Definition</dfn> is a tag used for defining terms</p>

Styleguide Typography.dfn
*/
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
/*
Mark

Uses color defined on the palette `text`, key `mark`.

Markup:
<p><mark>Really important</mark> and thus, marked text</p>

Styleguide Typography.mark
*/
mark {
  background-color: #ffdec4;
  color: #1A1A19;
  padding: 0 0.3375rem; }

/**
 * Add the correct font size in all browsers.
 */
/*
Small

Applies `$h6-font-size` to small texts, applies a three-step reduction if inside a `<h1>`, `<h2>`, `<h3>` tag.

The helper class `.small` can be used to fake the element.

Markup:
<p>Whenever I found a <small>not so important text,</small> i use the small tag</p>
<h1>A big heading with <small>an small portion of text</small></h1>
<h2>A second-level title <small>featuring a minor text</small></h2>
<h3>Any h3 will also feature a <small>reduction on its smaller parts</small></h3>
<p class="small">I'm a <code>.small</code> text!<p/>

Styleguide Typography.small
*/
small,
.small {
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem; }

.small * {
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem; }

h1 small {
  font-size: 28px;
  font-size: 1.77689rem;
  line-height: 38px;
  line-height: 2.3625rem; }

h2 small {
  font-size: 21px;
  font-size: 1.333rem;
  line-height: 27px;
  line-height: 1.6875rem; }

h3 small {
  font-size: 16px;
  font-size: 1rem;
  line-height: 22px;
  line-height: 1.35rem; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
/*
Sub, Sup

Normalizes font-size and prevents `sub` and `sup` elements from affecting the line height in all browsers.

Markup:
<p>When a <sub>sub</sub> or a <sup>sup</sup> text appears, citations are often the reason behind</p>

Styleguide Typography.sub
*/
sub,
sup {
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

/*
 * Remove the text shadow on text selections (opinionated).
 * HUESOS: Use the same as <mark> elements
 * 1. Restore the coloring undone by defining the text shadow (opinionated).
 */
/*
Selection

Uses the same color as in `<mark>` for text highlighting.

Markup:
<p>Try selecting a part of this text for <code>::selection</code> testing</p>

Styleguide Pseudo-elements.selection
*/
::-moz-selection {
  background-color: #ffdec4;
  /* 1 */
  color: #1A1A19;
  /* 1 */
  text-shadow: none; }

::selection {
  background-color: #ffdec4;
  /* 1 */
  color: #1A1A19;
  /* 1 */
  text-shadow: none; }

/* Embedded content (https://html.spec.whatwg.org/multipage/embedded-content.html#embedded-content)
   ========================================================================== */
/*
 * Change the alignment on media elements in all browers (opinionated).
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Deletes ugly iframe border and makes it fill its parent by default
 */
/*
Iframe

Deletes border, displays iframe as a block element that always fills its parent's size.

Markup:
<section style="width:50%; height: 600px">
	<iframe src="https://mentalstones.com"></iframe>
</section>

Styleguide Base.iframe
*/
iframe {
  border: none;
  width: 100%;
  height: 100%;
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 * Make all images responsive by default
 */
/*
Images

All images are responsive by default.

Markup:
<section>
	<img src="https://placeimg.com/300/300/nature" />
</section>
<section>
	<img src="https://placeimg.com/2500/750/nature" />
</section>

Styleguide Base.images
*/
img {
  border-style: none;
  max-width: 100%;
  height: auto; }

figure {
  display: inline-block; }

figcaption {
  display: block; }

/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
svg {
  fill: currentColor; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Tabular data (https://html.spec.whatwg.org/multipage/tables.html#tables)
   ========================================================================== */
/**
 * Collapse border spacing
 */
table {
  border-collapse: collapse; }

/* Forms (https://html.spec.whatwg.org/multipage/forms.html#forms)
   ========================================================================== */
/**
 * Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * 1. Remove the default vertical scrollbar in IE.
 * 2. Change the resize direction on textareas in all browsers (opinionated).
 */
textarea {
  overflow: auto;
  /* 1 */
  resize: vertical;
  /* 2 */ }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive elements (https://html.spec.whatwg.org/multipage/forms.html#interactive-elements)
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting (https://html.spec.whatwg.org/multipage/scripting.html#scripting-3)
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* User interaction (https://html.spec.whatwg.org/multipage/interaction.html#editing)
   ========================================================================== */
/*
 * Remove the tapping delay on clickable elements (opinionated).
 * 1. Remove the tapping delay in IE 10.
 */
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 */
  touch-action: manipulation; }

/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* ARIA (https://w3c.github.io/html-aria/)
   ========================================================================== */
/**
 * Change the cursor on busy elements (opinionated).
 */
[aria-busy="true"] {
  cursor: progress; }

/*
 * Change the cursor on control elements (opinionated).
 */
[aria-controls] {
  cursor: pointer; }

/*
 * Change the display on visually hidden accessible elements (opinionated).
 */
[aria-hidden="false"][hidden]:not(:focus) {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements (opinionated).
 */
[aria-disabled] {
  cursor: default; }

/*
Details

Markup:
<details>
	<summary>Pure HTML5 accordion</summary>
	<p>This is HTML5's alternative to the old-fashioned accordion plugins made on JS.</p>
	<p>It's neat and simple. Love it.</p>
</details>


Styleguide Base.details
*/
summary {
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  cursor: pointer; }

/*
Checkboxes

Can be styled using `$pseudo-checkbox` global variable or the `.pseudo-checkbox` class

Markup:
<div class="form-item">
	<input type="checkbox" id="check" name="check">
	<label for="check">Checkbox normal</label>
</div>
<div class="form-item">
	<input type="checkbox" id="check2" class="pseudo-checkbox" name="check2">
	<label for="check2">Pseudo Checkbox</label>
</div>

Styleguide Forms.checkbox
*/
/*
Radio buttons

Can be styled using `$pseudo-radio` global variable or the `.pseudo-checkbox` class

Markup:
<div class="form-item">
	<input type="radio" id="radio" name="radio">
	<label for="radio">Radio normal</label>
</div>
<div class="form-item">
	<input type="radio" id="radio2" class="pseudo-radio" name="radio">
	<label for="radio2">Pseudo Radio</label>
</div>

Styleguide Forms.radio
*/
input,
label,
select,
button,
textarea {
  display: inline-block;
  margin: 0;
  border: 0;
  width: auto;
  vertical-align: middle;
  white-space: normal;
  line-height: inherit;
  background: none;
  border-radius: 0px;
  /* Browsers have different default form fonts */
  color: inherit;
  font-size: inherit;
  font-family: inherit; }

label {
  margin-right: 0.675rem; }

input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
  box-shadow: 0 0 0px 1000px #aeb4ae inset;
  color: #1A1A19; }

input {
  /*
	Input
	
	General text input.

	Please note a wrapper with a `.form-item` class is added in order to create separate blocks
	and apply a vertical-rhythm based margin.

	This wrapper also applies a flexbox in order to take the full width of the parent.

	Without this wrapper and class, all the form elements would behave as inline-block elements.

	A wrapper `.form-item--required` adds a marker to let users know the field is mandatory.

	For items with an `input[disabled]`, the recommendation is to mark the whole `.form-item` as `.disabled`
	
	Markup:
	<div class="form-item">
	  <label for="text">Text</label>
	  <input type="text" id="text" name="text">
	</div>
	<div class="form-item form-item--required">
	  <label for="text">Text Required</label>
	  <input required type="text" id="text" name="text">
	</div>
	<div class="form-item disabled">
	  <label for="text">Form item disabled</label>
	  <input disabled type="text" id="text" name="text">
	</div>
	<div class="form-item">
	  <label for="password">Password</label>
	  <input type="password" id="password" name="password">
	</div>
	<div class="form-item">
	  <label for="email">Email</label>
	  <input type="email" id="email" name="email">
	</div>
	<div class="form-item">
	  <label for="url">Web Address</label>
	  <input id="url" type="url" placeholder="http://yoursite.com">
	</div>
	<div class="form-item">
	  <label for="input__phone">Phone Number</label>
	  <input id="input__phone" type="tel" placeholder="(999) 999-9999">
	</div>
	<div class="form-item">
	  <label for="input__search">Search</label>
	  <input id="input__search" type="search" placeholder="Enter Search Term">
	</div>
	
	Styleguide Forms.input
	*/
  border: 1px solid #dbe2db;
  padding: 0.3375rem 0.675rem;
  /* Make webkit render the search input like a normal text field */
  /* Turn off the recent search for webkit. It adds about 15px padding on the left */
  /* Fix IE7 display bug */
  /*
	File Input
	
	Uses the label for handling click and hides the actual input element.
	Important! Requires the `<label>` to be an inmediate sibling of the `<input>`
	
	Markup:
	<div class="form-item">
		<input type="file" id="file" name="file">
		<label for="file">Upload your file</label>
	</div>
	<div class="form-item">
		<input type="file" id="file" name="file">
		<label for="file"><i class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M8 12h4V6h3l-5-5-5 5h3v6zm11.338 1.532c-.21-.224-1.611-1.723-2.011-2.114A1.503 1.503 0 0 0 16.285 11h-1.757l3.064 2.994h-3.544a.274.274 0 0 0-.24.133L12.992 16H7.008l-.816-1.873a.276.276 0 0 0-.24-.133H2.408L5.471 11H3.715c-.397 0-.776.159-1.042.418-.4.392-1.801 1.891-2.011 2.114-.489.521-.758.936-.63 1.449l.561 3.074c.128.514.691.936 1.252.936h16.312c.561 0 1.124-.422 1.252-.936l.561-3.074c.126-.513-.142-.928-.632-1.449z"/></svg></i>Upload your file (with icon!)</label>
	</div>
	
	Styleguide Forms.file
	*/ }
  input:hover, input:focus {
    border-color: #939793; }
  input:focus {
    outline: 0; }
  input[type=checkbox], input[type=radio] {
    width: 16px;
    height: 16px;
    vertical-align: middle;
    margin-right: 0.675rem; }
  input[type=search] {
    -webkit-appearance: textfield;
    -webkit-box-sizing: content-box; }
  ::-webkit-search-decoration {
    display: none; }
  input[type="reset"], input[type="button"], input[type="submit"] {
    overflow: visible; }
  input[type=checkbox].pseudo-checkbox:checked + label {
    position: relative; }
    input[type=checkbox].pseudo-checkbox:checked + label:after {
      content: "";
      display: inline-block;
      width: 8px;
      height: 8px;
      position: absolute;
      top: 50%;
      left: 4px;
      transform: translateY(-50%);
      background-color: #3d3f3d; }
  input[type=checkbox].pseudo-checkbox + label {
    cursor: pointer;
    display: flex;
    align-items: center; }
    input[type=checkbox].pseudo-checkbox + label:before {
      content: "";
      display: inline-block;
      width: 16px;
      height: 16px;
      margin: 0 0.675rem 0 0;
      border: 1px solid #3d3f3d;
      background-color: #f8f9f8;
      cursor: pointer; }
  input[type=radio].pseudo-radio:checked + label {
    position: relative; }
    input[type=radio].pseudo-radio:checked + label:after {
      content: "";
      position: absolute;
      display: inline-block;
      top: 50%;
      left: 4px;
      width: 8px;
      height: 8px;
      transform: translateY(-50%);
      background-color: #3d3f3d;
      border-radius: 50%;
      cursor: pointer; }
  input[type=radio].pseudo-radio + label {
    cursor: pointer;
    display: flex;
    align-items: center; }
    input[type=radio].pseudo-radio + label:before {
      content: "";
      display: inline-block;
      margin: 0 0.675rem 0 0;
      width: 16px;
      height: 16px;
      border: 1px solid #3d3f3d;
      background-color: #f8f9f8;
      vertical-align: top;
      border-radius: 50%;
      cursor: pointer; }

/*
Select

<span class="tag tag--warning">JS</span> Handles multiple selection using [Selectr](https://github.com/Mobius1/Selectr)

It is applied automatically to all `.js--selectr` inputs on the page. To prevent this, you will need to make your own JS bundle instead of using the common `huesos.js`

Markup:
<div class="form-item">
	<select class="js--selectr">
		<option value="volvo">Volvo</option>
		<option value="saab">Saab</option>
		<option value="mercedes">Mercedes</option>
		<option value="audi">Audi</option>
	</select>
</div>
<div class="form-item">
	<select multiple class="js--selectr">
		<option value="volvo">Volvo</option>
		<option value="saab">Saab</option>
		<option value="mercedes">Mercedes</option>
		<option value="audi">Audi</option>
	</select> 
</div>
<div class="form-item">
	<select class="js--selectr">
		<optgroup label= "Expensive cars">
			<option value="volvo">Volvo</option>
			<option value="saab">Saab</option>
		</optgroup>
		<optgroup label= "Unaffordable cars">
			<option value="mercedes">Mercedes</option>
			<option value="audi">Audi</option>
		</optgroup>
	</select> 
</div>

Styleguide Forms.select
*/
select {
  border: 1px solid #dbe2db;
  padding: 0 0.675rem;
  appearance: none;
  /* Move the label to the top */ }
  select:hover, select:focus {
    border-color: #939793; }
  select[multiple] {
    vertical-align: top; }

/*
Textarea

Use in conjunction with `.form-item` and its modifiers (see its own section)

It is recommended to set a minimum rows value of 5. A min-height will prevent textareas from looking too similar to an `input[type="text"]` element.


Markup:
<div class="form-item">
	<label for="area1">Textarea</label>
	<textarea rows="5" id="area1"></textarea>
</div>
<div class="form-item form-item--label-inside">
	<label for="area2">Textarea</label>
	<textarea rows="5" id="area2"></textarea>
</div>
<div class="form-item form-item--label-inside form-item--col">
	<label for="area3">Textarea</label>
	<textarea id="area3"></textarea>
</div>

Styleguide Forms.textarea
*/
textarea {
  border: 1px solid #dbe2db;
  /* Move the label to the top */
  vertical-align: top;
  /* Turn off scroll bars in IE unless needed */
  overflow: auto;
  width: 100%;
  padding: 0.3375rem 0.675rem;
  min-height: 2.7rem; }

/*
Fieldsets

If either `$disable-fieldset` boolean is set to true or `.fieldset--disabled` class is added, visually hides the fielset box and converts the `<legend>` into a pseudo-heading.

Markup:
<fieldset>
	<legend>Fieldset legend</legend>
	<div class="form-item">
		<label for="item">This is my label</label>
		<input type="email" id="item" placeholder="Email" />
	</div>
	<div class="form-item">
		<label for="item2">This is a second label</label>
		<input type="text" id="item2" value="Text" />
	</div>
</fieldset>
<fieldset class="fieldset--disabled">
	<legend>Fieldset legend</legend>
	<div class="form-item">
		<label for="item">This is my label</label>
		<input type="email" id="item" placeholder="Email" />
	</div>
	<div class="form-item">
		<label for="item2">This is a second label</label>
		<input type="text" id="item2" value="Text" />
	</div>
</fieldset>

Styleguide Forms.fieldset
*/
fieldset {
  margin-right: 0;
  margin-left: 0;
  border: 1px solid #dbe2db;
  border-radius: 0px;
  padding: 1.35rem; }
  fieldset legend {
    font-size: 16px;
    font-size: 1rem;
    line-height: 22px;
    line-height: 1.35rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em; }

fieldset.fieldset--disabled {
  margin-right: 0;
  margin-left: 0;
  border: none;
  padding: 0; }
  fieldset.fieldset--disabled legend {
    margin-bottom: 1.35rem;
    font-size: 21px;
    font-size: 1.333rem;
    line-height: 27px;
    line-height: 1.6875rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em; }

/*
Form item wrapper

General block-level wrapper for spacing between items.

It also provides several variations for different styling of items.

.form-item--required		- Marks the label with a red asterisk
.form-item--col				- Stacks elements instead of displaying them side by side
.form-item--label-inside	- Visually puts the label inside of the input. Only makes sense if the border strategy is full
.form-item--label-inside.form-item--required	- `.form-item--required` can be combinated with the other modifiers
.form-item--label-inside.form-item--col	- You can sum `col`and `required` to get this commonly seen pattern

Markup:
<div class="form-item {{modifier_class}}">
	<label for="text">A form item</label>
	<input type="text" id="text" name="text">
</div>

Styleguide Forms.form-item
*/
.form-item {
  margin-bottom: 1.35rem;
  display: flex;
  align-items: baseline; }
  .form-item label {
    flex: 0 1 auto;
    font-size: 12px;
    font-size: 0.75019rem;
    line-height: 16px;
    line-height: 1.0125rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em; }
  .form-item input[type="text"],
  .form-item input[type="email"],
  .form-item input[type="password"],
  .form-item input[type="url"],
  .form-item input[type="tel"],
  .form-item input[type="search"] {
    flex: 1 0 auto; }
  .form-item:last-child, .form-item:last-of-type {
    margin-bottom: 0; }

.form-item--col {
  display: block; }
  .form-item--col label,
  .form-item--col input,
  .form-item--col textarea {
    display: block;
    width: 100%; }
  .form-item--col input[type="checkbox"],
  .form-item--col input[type="radio"] {
    width: auto; }

.form-item--required label::after {
  content: "*";
  color: #ffc4c8; }

.form-item--label-inside {
  border-radius: 0px;
  border: 1px solid #dbe2db;
  padding: 0.3375rem 0.675rem; }
  .form-item--label-inside:hover, .form-item--label-inside:focus {
    border-color: #939793; }
  .form-item--label-inside input,
  .form-item--label-inside textarea {
    border: none;
    border-radius: 0;
    padding: 0; }

/*
Button

Either `<input type="submit / ">`, `<button>` or `<a class="button">`.

There are three general strategies available. `border`, `background` and `mixed`

Markup:
<button class="{{modifier_class}}">Click me please!</button>
<a href="#" class="button {{modifier_class}}">I'm a link!</a>
<input type="submit" class="{{modifier_class}}" value="Submit input" />

.button--success           - Uses success color to indicate a positive action (OK, login, continue...)
.button--warning           - Uses warning color to indicate a potentially negative action
.button--error             - Uses error color to indicate a negative action (delete, cancel, no...)
.disabled          		   - The helper class `.disabled` knows how to erase user interaction on buttons
.button--error.disabled             - .disabled and the rest of the modifiers can be safely applied at the same time


Styleguide Components.buttons
*/
a.button {
  border: 2px solid #696c69; }
  a.button, a.button:link, a.button:visited, a.button:focus, a.button:hover, a.button:active {
    text-decoration: none; }
  a.button:link, a.button:visited {
    color: #696c69; }
  a.button:hover, a.button:focus {
    border: 2px solid #696c69;
    background: #696c69;
    color: #FFFFFF; }

input[type=submit],
input[type=reset],
input[type=button],
button,
.button,
input[type=file] + label {
  background: none;
  outline: none;
  /* IE8 and FF freak out if this rule is within another selector */
  cursor: pointer;
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 27px;
  line-height: 1.6875rem;
  display: inline-block;
  padding: 0 0.675rem;
  text-transform: uppercase;
  letter-spacing: 0.05rem;
  vertical-align: middle;
  font-weight: 700;
  font-family: "Lato", Helvetica, Arial sans-serif;
  border-radius: 2px;
  border: 2px solid #696c69;
  color: #696c69; }
  input[type=submit]::-moz-focus-inner,
  input[type=reset]::-moz-focus-inner,
  input[type=button]::-moz-focus-inner,
  button::-moz-focus-inner,
  .button::-moz-focus-inner,
  input[type=file] + label::-moz-focus-inner {
    border: 0;
    padding: 0; }
  input[type=submit]:hover, input[type=submit]:active, input[type=submit]:focus,
  input[type=reset]:hover,
  input[type=reset]:active,
  input[type=reset]:focus,
  input[type=button]:hover,
  input[type=button]:active,
  input[type=button]:focus,
  button:hover,
  button:active,
  button:focus,
  .button:hover,
  input[type=file] + label:hover,
  .button:active,
  input[type=file] + label:active,
  .button:focus,
  input[type=file] + label:focus {
    outline: 0; }
  ::-webkit-file-upload-button {
    padding: 0;
    border: 0;
    background: none; }
  input[type=submit]:hover, input[type=submit]:focus,
  input[type=reset]:hover,
  input[type=reset]:focus,
  input[type=button]:hover,
  input[type=button]:focus,
  button:hover,
  button:focus,
  .button:hover,
  input[type=file] + label:hover,
  .button:focus,
  input[type=file] + label:focus {
    background: #696c69;
    color: #FFFFFF; }
  input[type=submit] .icon,
  input[type=reset] .icon,
  input[type=button] .icon,
  button .icon,
  .button .icon,
  input[type=file] + label .icon {
    font-size: 12px;
    font-size: 0.75019rem;
    line-height: 16px;
    line-height: 1.0125rem;
    height: 0.75019rem;
    line-height: 1; }
    input[type=submit] .icon svg,
    input[type=reset] .icon svg,
    input[type=button] .icon svg,
    button .icon svg,
    .button .icon svg,
    input[type=file] + label .icon svg {
      fill: currentColor; }

input[type=submit] + input[type=submit] {
  margin-left: 0.3375rem; }

input[type=submit] + input[type=reset] {
  margin-left: 0.3375rem; }

input[type=submit] + input[type=button] {
  margin-left: 0.3375rem; }

input[type=submit] + button {
  margin-left: 0.3375rem; }

input[type=submit] + .button, input[type=file][type=submit] + label {
  margin-left: 0.3375rem; }

input[type=reset] + input[type=submit] {
  margin-left: 0.3375rem; }

input[type=reset] + input[type=reset] {
  margin-left: 0.3375rem; }

input[type=reset] + input[type=button] {
  margin-left: 0.3375rem; }

input[type=reset] + button {
  margin-left: 0.3375rem; }

input[type=reset] + .button, input[type=file][type=reset] + label {
  margin-left: 0.3375rem; }

input[type=button] + input[type=submit] {
  margin-left: 0.3375rem; }

input[type=button] + input[type=reset] {
  margin-left: 0.3375rem; }

input[type=button] + input[type=button] {
  margin-left: 0.3375rem; }

input[type=button] + button {
  margin-left: 0.3375rem; }

input[type=button] + .button, input[type=file][type=button] + label {
  margin-left: 0.3375rem; }

button + input[type=submit] {
  margin-left: 0.3375rem; }

button + input[type=reset] {
  margin-left: 0.3375rem; }

button + input[type=button] {
  margin-left: 0.3375rem; }

button + button {
  margin-left: 0.3375rem; }

button + .button {
  margin-left: 0.3375rem; }

.button + input[type=submit], input[type=file] + label + input[type=submit] {
  margin-left: 0.3375rem; }

.button + input[type=reset], input[type=file] + label + input[type=reset] {
  margin-left: 0.3375rem; }

.button + input[type=button], input[type=file] + label + input[type=button] {
  margin-left: 0.3375rem; }

.button + button, input[type=file] + label + button {
  margin-left: 0.3375rem; }

.button + .button, input[type=file] + label + .button, input.button[type=file] + label {
  margin-left: 0.3375rem; }

.button--muted,
input.button--muted {
  border-color: #eaeeea;
  color: #eaeeea; }
  .button--muted:hover, .button--muted:focus,
  input.button--muted:hover,
  input.button--muted:focus {
    background: #eaeeea;
    color: #1A1A19; }

a.button--muted {
  border-color: #eaeeea; }
  a.button--muted:link, a.button--muted:visited {
    color: #eaeeea; }
  a.button--muted:hover, a.button--muted:focus {
    border-color: #eaeeea;
    background: #eaeeea;
    color: #1A1A19; }

.button--success,
input.button--success {
  border-color: #cfffe4;
  color: #cfffe4; }
  .button--success:hover, .button--success:focus,
  input.button--success:hover,
  input.button--success:focus {
    background: #cfffe4;
    color: #1A1A19; }

a.button--success {
  border-color: #cfffe4; }
  a.button--success:link, a.button--success:visited {
    color: #cfffe4; }
  a.button--success:hover, a.button--success:focus {
    border-color: #cfffe4;
    background: #cfffe4;
    color: #1A1A19; }

.button--warning,
input.button--warning {
  border-color: #fffbc4;
  color: #fffbc4; }
  .button--warning:hover, .button--warning:focus,
  input.button--warning:hover,
  input.button--warning:focus {
    background: #fffbc4;
    color: #1A1A19; }

a.button--warning {
  border-color: #fffbc4; }
  a.button--warning:link, a.button--warning:visited {
    color: #fffbc4; }
  a.button--warning:hover, a.button--warning:focus {
    border-color: #fffbc4;
    background: #fffbc4;
    color: #1A1A19; }

.button--error,
input.button--error {
  border-color: #ffc4c8;
  color: #ffc4c8; }
  .button--error:hover, .button--error:focus,
  input.button--error:hover,
  input.button--error:focus {
    background: #ffc4c8;
    color: #1A1A19; }

a.button--error {
  border-color: #ffc4c8; }
  a.button--error:link, a.button--error:visited {
    color: #ffc4c8; }
  a.button--error:hover, a.button--error:focus {
    border-color: #ffc4c8;
    background: #ffc4c8;
    color: #1A1A19; }

input[type=submit][disabled],
input[type=reset][disabled],
input[type=button][disabled],
button[disabled],
button.disabled,
a.button.disabled,
input.disabled {
  opacity: 0.33;
  cursor: arrow;
  pointer-events: none; }
  input[type=submit][disabled]:hover, input[type=submit][disabled]:focus,
  input[type=reset][disabled]:hover,
  input[type=reset][disabled]:focus,
  input[type=button][disabled]:hover,
  input[type=button][disabled]:focus,
  button[disabled]:hover,
  button[disabled]:focus,
  button.disabled:hover,
  button.disabled:focus,
  a.button.disabled:hover,
  a.button.disabled:focus,
  input.disabled:hover,
  input.disabled:focus {
    cursor: arrow; }

/*
Headings

The `<h1>` to `<h6>` HTML elements can be mimicked using `.h1` to `.h6` classes

Markup:
<h1>Main titles use heading one</h1>
<h2>Subtitules and main sections use h2</h2>
<h3>H3 is mainly for nested sections</h3>
<h4>In case you need furher sectioning, use an h4</h4>
<h5>Rarely you will need a heading five</h5>
<h6>Heading six is rather unexpected</h6>


Styleguide Typography.headings
*/
h1, .h1 {
  font-size: 51px;
  font-size: 3.15733rem;
  line-height: 59px;
  line-height: 3.7125rem; }

h2, .h2 {
  font-size: 38px;
  font-size: 2.36859rem;
  line-height: 43px;
  line-height: 2.7rem; }

h3, .h3 {
  font-size: 28px;
  font-size: 1.77689rem;
  line-height: 38px;
  line-height: 2.3625rem; }

h4, .h4 {
  font-size: 21px;
  font-size: 1.333rem;
  line-height: 27px;
  line-height: 1.6875rem; }

h5, .h5 {
  font-size: 16px;
  font-size: 1rem;
  line-height: 22px;
  line-height: 1.35rem; }

h6, .h6 {
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem; }

h1, .h1,
h2, .h2,
h3, .h3 {
  line-height: 1; }

h1, .h1,
h2, .h2 {
  letter-spacing: -0.03em; }

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  color: #5d5f79;
  font-weight: normal; }
  h1 small, h2 small, h3 small, h4 small, h5 small, h6 small,
  .h1 small, .h2 small, .h3 small, .h4 small, .h5 small, .h6 small {
    color: inherit;
    vertical-align: 0; }

/*
Secondary font

Helper `.class` and `%placeholder` used to apply the secondary font as set on `_config.scss`

Markup:
<p class="font-secondary">This paragraph has been set to use the secondary font.
It could otherwise have used a regular CSS selector with <code>@extend %font-secondary</code>
to achive the same effect</p>


Styleguide Helpers.secondary-font
*/
.font-secondary,
h1,
h2,
h3,
h4,
dt,
.your-classes,
#your-ids {
  font-family: "Fira Sans", Helvetica, Arial sans-serif; }

h1 a, h1 a:link, h1 a:visited, h1 a:focus, h1 a:hover, h1 a:active {
  text-decoration: none; }

h2 a, h2 a:link, h2 a:visited, h2 a:focus, h2 a:hover, h2 a:active {
  text-decoration: none; }

h3 a, h3 a:link, h3 a:visited, h3 a:focus, h3 a:hover, h3 a:active {
  text-decoration: none; }

h4 a, h4 a:link, h4 a:visited, h4 a:focus, h4 a:hover, h4 a:active {
  text-decoration: none; }

dt a, dt a:link, dt a:visited, dt a:focus, dt a:hover, dt a:active {
  text-decoration: none; }

.your-classes a, .your-classes a:link, .your-classes a:visited, .your-classes a:focus, .your-classes a:hover, .your-classes a:active {
  text-decoration: none; }

#your-ids a, #your-ids a:link, #your-ids a:visited, #your-ids a:focus, #your-ids a:hover, #your-ids a:active {
  text-decoration: none; }

/*
Quotes

Tipographic quotes can be explicitly defined using the variable `$quotes`

Markup:
<q>Look! As the quote said, <q>a quote can be nested inside another quote</q></q>

Styleguide Typography.quotes
*/
q {
  quotes: "“" "”" "‘" "’"; }

/*
Blockquotes

Blockquotes receive a padding based on '$gutter`

Markup:
<blockquote class="myclass {{modifier_class}}">
  <p>A block quotation (also known as a long quotation or extract) is a quotation in a written document, that is set off from the main text as a paragraph, or block of text.</p>
  <p>It is typically distinguished visually using indentation and a different typeface or smaller size quotation. It may or may not include a citation, usually placed at the bottom.</p>
  <cite><a href="#!">Said no one, ever.</a></cite>
</blockquote>

.blockquote--decorated        - Adds the user-defined decoration (usually a quote) as a pseudo-element

Styleguide Typography.blockquote
*/
blockquote {
  margin: 0 0 1.35rem 2.7rem; }

.blockquote--decorated {
  position: relative; }
  .blockquote--decorated:before {
    content: "*";
    font-size: 38px;
    font-size: 2.36859rem;
    line-height: 43px;
    line-height: 2.7rem;
    font-family: "Fira Sans", Helvetica, Arial sans-serif;
    position: absolute;
    top: 0.3375rem;
    left: -2.7rem; }

code,
kbd,
samp,
var {
  display: inline-block;
  vertical-align: baseline;
  box-decoration-break: clone;
  background-color: #dbe2db;
  color: #1A1A19;
  padding: 0 0.3375rem;
  border-radius: 2px; }

/*
Minititle

The concept of "minititle" makes reference to a small heading, normally used for sectioning.

It is an opinionated design that reduces the text size and then augments its visual weight by using a combination of a bold weight, an uppercase text-transform and a greater letter-spacing.

Markup:
<section>
	<p class="minititle">This is the minititle of this section</p>
	<p>A normal text. As we said before, the minititle gives visual weight while using a small font-size</p>
</section>
<section class="card" style="width:250px">
	<h3 class="minititle">An h3 reduced!</h3>
	<p>You can use your <em>minititle</em> on <code>heading</code> elements and maintain the semantics while reducing the font-size</p>
</section>


Styleguide Typography.minititle
*/
.minititle {
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.05em; }

/*
Icons

The preferred use for icons is `<svg>` inline markup wrapped on `<i class="icon">` tags.

Instead of SVG, typography can be used as well. Huesos will consistently style the sizing on both cases.

A set of icons is __not__ provided. You are supposed to provide your own choices.

Markup:
<p><i class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M12.496 17.414c-.394-1.096-1.805-4.775-2.39-6.297-1.103.737-2.334 1.435-3.512 1.928-.366 1.28-1.094 3.709-1.446 4.033-.604.557-.832.485-.925-.279s-.485-3.236-.485-3.236-2.162-1.219-2.84-1.568-.667-.591.057-.974c.422-.223 2.927-.085 4.242.005.861-.951 1.931-1.882 2.993-2.679-1.215-1.076-4.15-3.675-5.034-4.424-.776-.658.079-.797.079-.797.39-.07 1.222-.132 1.628-.009 2.524.763 6.442 2.068 7.363 2.376l1.162-.821c4.702-3.33 5.887-2.593 6.111-2.27s.503 1.701-4.199 5.032l-1.16.823c-.029.98-.157 5.151-.311 7.811-.025.428-.367 1.198-.565 1.544-.001 0-.423.765-.768-.198z"/></svg></i> Aircrafts & other stuff</p>
<p><i class="icon">☝︎</i> Drag & Drop me</p>
<a href="#" class="button"><i class="icon mr pr br quarter-gutter"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.316 6.246c.008.162.011.326.011.488 0 4.99-3.797 10.742-10.74 10.742-2.133 0-4.116-.625-5.787-1.697a7.577 7.577 0 0 0 5.588-1.562 3.779 3.779 0 0 1-3.526-2.621 3.858 3.858 0 0 0 1.705-.065 3.779 3.779 0 0 1-3.028-3.703v-.047a3.766 3.766 0 0 0 1.71.473 3.775 3.775 0 0 1-1.168-5.041 10.716 10.716 0 0 0 7.781 3.945 3.813 3.813 0 0 1-.097-.861 3.773 3.773 0 0 1 3.774-3.773 3.77 3.77 0 0 1 2.756 1.191 7.602 7.602 0 0 0 2.397-.916 3.789 3.789 0 0 1-1.66 2.088 7.55 7.55 0 0 0 2.168-.594 7.623 7.623 0 0 1-1.884 1.953z"/></svg></i>An icon inside a button inherits its properties!</a>


Styleguide Typography.icons
*/
.icon {
  font-weight: normal;
  font-style: normal;
  line-height: 1;
  height: 1rem;
  display: inline-block;
  margin-right: 0.3375rem; }
  .icon svg {
    height: 100%;
    width: auto;
    vertical-align: bottom; }

/*
Paragraph Text

Paragraph items wrapped on any element marked as `.text` will have its last `p` child set marginless.

They also feature an extra spacing on headings.

This used to be global behavior, but there are moments on which a standalone `p` needs to have its `margin-bottom` untouched.

Markup:
<section class="text">
	<h2>First heading has no margin-top</h2>
	<p>Hello there! i'm the first pararagph inside a card marked as text.</p>
	<p>This means we can write several paragraphs and be sure that the last one will feature no margin-bottom</p>
	<h3>But the rest of headings have!</h3>
	<p>Otherwise, I will end up breaking the design by adding an unneeded space at the bottom!</p>
</section>

Styleguide Typography.paragraph
*/
.text h1, .alert h1, .text h2, .alert h2, .text h3, .alert h3, .text h4, .alert h4 {
  margin-top: 2.7rem; }

.text section, .alert section,
.text article,
.alert article {
  margin-bottom: 2.7rem; }

.text h1:first-child, .alert h1:first-child,
.text h2:first-child,
.alert h2:first-child,
.text h3:first-child,
.alert h3:first-child,
.text h4:first-child,
.alert h4:first-child {
  margin-top: 0; }

.text p:last-child, .alert p:last-child {
  margin-bottom: 0; }

/*
Tables

Tables span across all available space evenly distributed.

A `.table` wrapper ensures that a basic responsive solution (using overflow-x) is set. Otherwise, the table collapses.

Borders are collapsed by default

`<caption>` receives a `.minititle` styling

Markup:
<section class="table">
  <table>
    <caption>Table Caption</caption>
    <thead>
      <tr>
        <th>Table Heading 1</th>
        <th>Table Heading 2</th>
        <th>Table Heading 3</th>
        <th>Table Heading 4</th>
        <th>Table Heading 5</th>
      </tr>
    </thead>
    <tfoot>
      <tr>
        <th>Table Footer 1</th>
        <th>Table Footer 2</th>
        <th>Table Footer 3</th>
        <th>Table Footer 4</th>
        <th>Table Footer 5</th>
      </tr>
    </tfoot>
    <tbody>
      <tr>
        <td>Table Cell 1</td>
        <td>Table Cell 2</td>
        <td>Table Cell 3</td>
        <td>Table Cell 4</td>
        <td>Table Cell 5</td>
      </tr>
      <tr>
        <td>Table Cell 1</td>
        <td>Table Cell 2</td>
        <td>Table Cell 3</td>
        <td>Table Cell 4</td>
        <td>Table Cell 5</td>
      </tr>
      <tr>
        <td>Table Cell 1</td>
        <td>Table Cell 2</td>
        <td>Table Cell 3</td>
        <td>Table Cell 4</td>
        <td>Table Cell 5</td>
      </tr>
      <tr>
        <td>Table Cell 1</td>
        <td>Table Cell 2</td>
        <td>Table Cell 3</td>
        <td>Table Cell 4</td>
        <td>Table Cell 5</td>
      </tr>
    </tbody>
  </table>
</section>


Styleguide Base.tables
*/
table {
  table-layout: fixed;
  min-width: 100%; }

th, td {
  border: 1px solid #dbe2db;
  padding: 0.675rem; }

th {
  text-align: left; }

.table {
  overflow: auto; }
  .table th, .table td {
    min-width: 120px; }

/*
Figure + Figcaption

The variable `$figcaption-font-size` defines the sizing of image captions.

In order to align the whole block while keeping the textalignment of the figcaption defined on `$figcaption-align`, you need to wrap the entire `<figure>` on an html block element containing the `.right`, `.left` or `.center` class.

Markup:
<section>
  <figure>
    <img src="https://placeimg.com/400/200/nature" />
    <figcaption>Well documented code is always a bliss</figcaption>
  </figure>
</section>
<section class="center">
  <figure>
    <img src="https://placeimg.com/400/200/nature" />
    <figcaption>Well documented code is always a bliss</figcaption>
  </figure>
</div>
<section class="right">
  <figure>
    <img src="https://placeimg.com/400/200/nature" />
    <figcaption>Well documented code is always a bliss</figcaption>
  </figure>
</div>


Styleguide Base.images.figure-figcaption
*/
figcaption {
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem;
  text-align: left; }

/*
Links

All links are formatted throught `set-link()` mixin.

The `.link-strategy` is honored but you can override it anytime by using helper classes.

Markup:
<a href="#" class="myclass {{modifier_class}}">This is a link! Here! Click! If smart, gujihqpol</a>

.link--inactive         	- Makes link appear as normal text but retain functionality
.disabled         			- The helper class dims the link and deletes visual feedback
.link-strategy-underline	- Sets a link as if `$link-strategy` was set to 'underline'
.link-strategy-border		- Sets a link as if `$link-strategy` was set to 'border'
.link-strategy-smart		- Sets a link as if `$link-strategy` was set to 'smart'
.link-strategy-mark			- Sets a link as if `$link-strategy` was set to 'mark'
.link-inverted				- Uses the inverted colors for this link. Normally used against a background.

Styleguide Typography.links
*/
a, a:link {
  color: #b09bca;
  text-decoration: underline; }

a:visited {
  color: #b09bca; }

a:focus, a:hover {
  color: #dec4ff;
  text-decoration: none;
  border: none;
  background: transparent; }

a:active {
  color: #dec4ff; }

a.link--inactive, a.link--inactive:link {
  color: #3d3f3d;
  text-decoration: underline; }

a.link--inactive:visited {
  color: #3d3f3d; }

a.link--inactive:focus, a.link--inactive:hover {
  color: #3d3f3d;
  text-decoration: none;
  border: none;
  background: transparent; }

a.link--inactive:active {
  color: #3d3f3d; }

a.link--inactive, a.link--inactive:link, a.link--inactive:visited, a.link--inactive:focus, a.link--inactive:hover, a.link--inactive:active {
  text-decoration: none; }

a.disabled, a.disabled:link, a.disabled:visited, a.disabled:focus, a.disabled:hover, a.disabled:active {
  text-decoration: none; }

a.link-strategy-underline, a.link-strategy-underline:link {
  color: #b09bca;
  text-decoration: underline; }

a.link-strategy-underline:visited {
  color: #b09bca; }

a.link-strategy-underline:focus, a.link-strategy-underline:hover {
  color: #dec4ff;
  text-decoration: none;
  border: none;
  background: transparent; }

a.link-strategy-underline:active {
  color: #dec4ff; }

a.link-strategy-border, a.link-strategy-border:link {
  color: #b09bca;
  text-decoration: none;
  border-bottom: 0.16875rem solid #efe3ff; }

a.link-strategy-border:visited {
  color: #b09bca; }

a.link-strategy-border:focus, a.link-strategy-border:hover {
  color: #dec4ff;
  text-decoration: none;
  border: none;
  background: transparent; }

a.link-strategy-border:active {
  color: #dec4ff; }

a.link-strategy-mark, a.link-strategy-mark:link {
  color: #b09bca;
  text-decoration: none;
  background-color: #efe3ff;
  position: relative; }
  a.link-strategy-mark:before, a.link-strategy-mark:after, a.link-strategy-mark:link:before, a.link-strategy-mark:link:after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    width: 2px;
    background-color: #efe3ff; }
  a.link-strategy-mark:before, a.link-strategy-mark:link:before {
    left: -2px; }
  a.link-strategy-mark:after, a.link-strategy-mark:link:after {
    right: -2px; }

a.link-strategy-mark:visited {
  color: #b09bca; }

a.link-strategy-mark:focus, a.link-strategy-mark:hover {
  color: #dec4ff;
  text-decoration: none;
  border: none;
  background: transparent; }

a.link-strategy-mark:active {
  color: #dec4ff; }

a.link-strategy-smart, a.link-strategy-smart:link {
  color: #b09bca;
  color: #b09bca;
  text-decoration: none;
  text-shadow: 0.03em 0 #efe3ff, -0.03em 0 #efe3ff, 0 0.03em #efe3ff, 0 -0.03em #efe3ff, 0.06em 0 #efe3ff, -0.06em 0 #efe3ff, 0.09em 0 #efe3ff, -0.09em 0 #efe3ff, 0.12em 0 #efe3ff, -0.12em 0 #efe3ff, 0.15em 0 #efe3ff, -0.15em 0 #efe3ff;
  background-image: linear-gradient(#efe3ff, #efe3ff), linear-gradient(#efe3ff, #efe3ff), linear-gradient(#b09bca, #b09bca);
  background-size: .05em 1px, .05em 1px, 1px 1px;
  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 90%, 100% 90%, 0% 90%; }
  a.link-strategy-smart::selection, a.link-strategy-smart:link::selection {
    text-shadow: 0.03em 0 #efe3ff, -0.03em 0 #efe3ff, 0 0.03em #efe3ff, 0 -0.03em #efe3ff, 0.06em 0 #efe3ff, -0.06em 0 #efe3ff, 0.09em 0 #efe3ff, -0.09em 0 #efe3ff, 0.12em 0 #efe3ff, -0.12em 0 #efe3ff, 0.15em 0 #efe3ff, -0.15em 0 #efe3ff;
    background: #efe3ff; }
  a.link-strategy-smart::-moz-selection, a.link-strategy-smart:link::-moz-selection {
    text-shadow: 0.03em 0 #efe3ff, -0.03em 0 #efe3ff, 0 0.03em #efe3ff, 0 -0.03em #efe3ff, 0.06em 0 #efe3ff, -0.06em 0 #efe3ff, 0.09em 0 #efe3ff, -0.09em 0 #efe3ff, 0.12em 0 #efe3ff, -0.12em 0 #efe3ff, 0.15em 0 #efe3ff, -0.15em 0 #efe3ff;
    background: #efe3ff; }
  a.link-strategy-smart:before, a.link-strategy-smart:after, a.link-strategy-smart *, a.link-strategy-smart *:before, a.link-strategy-smart *:after, a.link-strategy-smart:link:before, a.link-strategy-smart:link:after, a.link-strategy-smart:link *, a.link-strategy-smart:link *:before, a.link-strategy-smart:link *:after {
    text-shadow: none; }
  a.link-strategy-smart:visited, a.link-strategy-smart:link:visited {
    color: #b09bca; }

a.link-strategy-smart:visited {
  color: #b09bca; }

a.link-strategy-smart:focus, a.link-strategy-smart:hover {
  color: #dec4ff;
  text-decoration: none;
  border: none;
  background: transparent; }

a.link-strategy-smart:active {
  color: #dec4ff; }

a.link-inverted, a.link-inverted:link {
  color: #fff;
  text-decoration: underline; }

a.link-inverted:visited {
  color: #fff; }

a.link-inverted:focus, a.link-inverted:hover {
  color: #e3f2ff;
  text-decoration: none;
  border: none;
  background: transparent; }

a.link-inverted:active {
  color: #e3f2ff; }

/*
Kill Link Decoration

Helper class that kills al link decoration on a given block

Use carefully and scope only to the very elements you want to style. Unwanted overrides are easy to get.

Markup:
<section class="kill-link-decoration">
	<p>The <a href="#">links</a> within this text are <a href="#">not decorated</a> (underlines, border-bottom etc..)</p>
</section>

Styleguide Helpers.kill-link-decoration
*/
.kill-link-decoration a, .kill-link-decoration a:link, .kill-link-decoration a:visited, .kill-link-decoration a:focus, .kill-link-decoration a:hover, .kill-link-decoration a:active {
  text-decoration: none; }

/*
Kill Link

Completely disables the visual appearance of a link. It defaults to primary text color.

Use carefully and scope only to the very elements you want to style. Unwanted overrides are easy to get.

Markup:
<section class="kill-link">
	<p>The <a href="#">links</a> within this text are <a href="#">completely equal to normal text</a></p>
</section>

Styleguide Helpers.kill-link
*/
.kill-link a, .kill-link a:link {
  color: #3d3f3d;
  text-decoration: underline; }

.kill-link a:visited {
  color: #3d3f3d; }

.kill-link a:focus, .kill-link a:hover {
  color: #3d3f3d;
  text-decoration: none;
  border: none;
  background: transparent; }

.kill-link a:active {
  color: #3d3f3d; }

.kill-link a, .kill-link a:link, .kill-link a:visited, .kill-link a:focus, .kill-link a:hover, .kill-link a:active {
  text-decoration: none; }

/*
Disabled

Class and placeholder used to dim the element and indicate that is not usable anymore.

It also disables user interactions on buttons, links, etc... (see on their respective sections)

Markup:
<p class="disabled">I'm no longer active</p>
<mark class="disabled"> I'm no longer working</mark>


Styleguide Helpers.disabled
*/

.disabled {
  opacity: 0.33; }

/*
Text alignment

Helper classes that provide a quick access to `text-align`.

They also perform component-scoped alignment of items (see menu, figure and figcaption, etc...)

Markup:
<p class="left">Text-alignment or even</p>
<nav class="menu"><ul class="center"><li><a href="#">Menu item</a></li><li><a href="#">alignment</a></li></ul></nav>
<p class="right">can be achieved using this classes</p>


Styleguide Helpers.alignment
*/
.left {
  text-align: left; }

.center {
  text-align: center; }

.right {
  text-align: right; }

#main-wrapper {
  max-width: 960px;
  margin-left: auto;
  margin-right: auto;
  padding: 1.35rem; }

/*
Grid

Establishes a grid. Uses a float fallback for less capable browsers.

By default, it establishes a 4-col grid. Modifier classes can change this.

No row height is set: it depends on the content.

.grid--2col        - Establishes a 2col grid
.grid--3col        - Establishes a 3col grid
.grid--5col        - Establishes a 5col grid
.grid--6col        - Establishes a 6col grid
.grid--7col        - Establishes a 7col grid
.grid--8col        - Establishes a 8col grid
.grid--9col        - Establishes a 9col grid
.grid--10col       - Establishes a 10col grid
.grid--11col       - Establishes a 11col grid
.grid--12col       - Establishes a 12col grid

Markup:
<div class="grid {{ modifier_class }}">
    <div class="grid-item bg-base-primary" style="height:50px"></div>
    <div class="grid-item bg-base-secondary" style="height:50px""></div>
    <div class="grid-item bg-base-separator" style="height:50px""></div>
    <div class="grid-item bg-text-primary" style="height:50px""></div>
    <div class="grid-item bg-text-mark" style="height:50px""></div>
    <div class="grid-item bg-state-muted" style="height:50px""></div>
    <div class="grid-item bg-state-success" style="height:50px""></div>
    <div class="grid-item bg-state-warning" style="height:50px""></div>
    <div class="grid-item bg-state-error" style="height:50px""></div>
    <div class="grid-item bg-blue-base" style="height:50px""></div>
    <div class="grid-item bg-red-base" style="height:50px""></div>
    <div class="grid-item bg-green-base" style="height:50px""></div>
</div>

Styleguide Layout.grid
*/
.grid .grid-item {
  float: left;
  margin-bottom: 1.35rem; }

.grid--2col .grid-item {
  width: 50%;
  width: calc( (100% / 2) -  ( ( 1.35rem * ( 2 - 1 ) / 2 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--2col .grid-item:nth-child(2n) {
    margin-right: 0; }

.grid--3col .grid-item {
  width: 33.33333%;
  width: calc( (100% / 3) -  ( ( 1.35rem * ( 3 - 1 ) / 3 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--3col .grid-item:nth-child(3n) {
    margin-right: 0; }

.grid--4col .grid-item {
  width: 25%;
  width: calc( (100% / 4) -  ( ( 1.35rem * ( 4 - 1 ) / 4 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--4col .grid-item:nth-child(4n) {
    margin-right: 0; }

.grid--5col .grid-item {
  width: 20%;
  width: calc( (100% / 5) -  ( ( 1.35rem * ( 5 - 1 ) / 5 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--5col .grid-item:nth-child(5n) {
    margin-right: 0; }

.grid--6col .grid-item {
  width: 16.66667%;
  width: calc( (100% / 6) -  ( ( 1.35rem * ( 6 - 1 ) / 6 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--6col .grid-item:nth-child(6n) {
    margin-right: 0; }

.grid--7col .grid-item {
  width: 14.28571%;
  width: calc( (100% / 7) -  ( ( 1.35rem * ( 7 - 1 ) / 7 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--7col .grid-item:nth-child(7n) {
    margin-right: 0; }

.grid--8col .grid-item {
  width: 12.5%;
  width: calc( (100% / 8) -  ( ( 1.35rem * ( 8 - 1 ) / 8 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--8col .grid-item:nth-child(8n) {
    margin-right: 0; }

.grid--9col .grid-item {
  width: 11.11111%;
  width: calc( (100% / 9) -  ( ( 1.35rem * ( 9 - 1 ) / 9 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--9col .grid-item:nth-child(9n) {
    margin-right: 0; }

.grid--10col .grid-item {
  width: 10%;
  width: calc( (100% / 10) -  ( ( 1.35rem * ( 10 - 1 ) / 10 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--10col .grid-item:nth-child(10n) {
    margin-right: 0; }

.grid--11col .grid-item {
  width: 9.09091%;
  width: calc( (100% / 11) -  ( ( 1.35rem * ( 11 - 1 ) / 11 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--11col .grid-item:nth-child(11n) {
    margin-right: 0; }

.grid--12col .grid-item {
  width: 8.33333%;
  width: calc( (100% / 12) -  ( ( 1.35rem * ( 12 - 1 ) / 12 ) + 0.001rem ));
  margin-right: 1.35rem; }
  .grid--12col .grid-item:nth-child(12n) {
    margin-right: 0; }

@supports (display: grid) {
  .grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 1.35rem; }
    .grid:before, .grid:after {
      display: none; }
    .grid .grid-item {
      float: none;
      margin: 0;
      width: auto; }
  .grid--2col {
    grid-template-columns: repeat(2, 1fr); }
  .grid--3col {
    grid-template-columns: repeat(3, 1fr); }
  .grid--4col {
    grid-template-columns: repeat(4, 1fr); }
  .grid--5col {
    grid-template-columns: repeat(5, 1fr); }
  .grid--6col {
    grid-template-columns: repeat(6, 1fr); }
  .grid--7col {
    grid-template-columns: repeat(7, 1fr); }
  .grid--8col {
    grid-template-columns: repeat(8, 1fr); }
  .grid--9col {
    grid-template-columns: repeat(9, 1fr); }
  .grid--10col {
    grid-template-columns: repeat(10, 1fr); }
  .grid--11col {
    grid-template-columns: repeat(11, 1fr); }
  .grid--12col {
    grid-template-columns: repeat(12, 1fr); } }

/*
Responsive Grid

Inestad of setting a grid, you can use a set of helper classes to define the specific number of
columns on every breakpoint.

The pattern is as follows: `.grid--[breakpoint]--[number]col`. So, a 11-col grid from `$medium` breakpoint up would be `$grid--medium--11col`.

We follow the mobile-first approach to responsive web design, so you will need to stack your classes understanding that
no `max-width` constraint is set and every breakpoint will be active until a larger breakpoint weighs in.

Markup:
<div class="grid grid--small--2col grid--medium--6col grid--large--3col">
    <div class="grid-item bg-base-primary" style="height:50px"></div>
    <div class="grid-item bg-base-secondary" style="height:50px""></div>
    <div class="grid-item bg-base-separator" style="height:50px""></div>
    <div class="grid-item bg-text-primary" style="height:50px""></div>
    <div class="grid-item bg-text-mark" style="height:50px""></div>
    <div class="grid-item bg-state-muted" style="height:50px""></div>
</div>

Styleguide Layout.grid.responsive
*/
@media (min-width: 640px) {
  .grid--small--2col {
    grid-template-columns: repeat(2, 1fr); } }

@media (min-width: 640px) {
  .grid--small--3col {
    grid-template-columns: repeat(3, 1fr); } }

@media (min-width: 640px) {
  .grid--small--4col {
    grid-template-columns: repeat(4, 1fr); } }

@media (min-width: 640px) {
  .grid--small--5col {
    grid-template-columns: repeat(5, 1fr); } }

@media (min-width: 640px) {
  .grid--small--6col {
    grid-template-columns: repeat(6, 1fr); } }

@media (min-width: 640px) {
  .grid--small--7col {
    grid-template-columns: repeat(7, 1fr); } }

@media (min-width: 640px) {
  .grid--small--8col {
    grid-template-columns: repeat(8, 1fr); } }

@media (min-width: 640px) {
  .grid--small--9col {
    grid-template-columns: repeat(9, 1fr); } }

@media (min-width: 640px) {
  .grid--small--10col {
    grid-template-columns: repeat(10, 1fr); } }

@media (min-width: 640px) {
  .grid--small--11col {
    grid-template-columns: repeat(11, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--2col {
    grid-template-columns: repeat(2, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--3col {
    grid-template-columns: repeat(3, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--4col {
    grid-template-columns: repeat(4, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--5col {
    grid-template-columns: repeat(5, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--6col {
    grid-template-columns: repeat(6, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--7col {
    grid-template-columns: repeat(7, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--8col {
    grid-template-columns: repeat(8, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--9col {
    grid-template-columns: repeat(9, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--10col {
    grid-template-columns: repeat(10, 1fr); } }

@media (min-width: 960px) {
  .grid--medium--11col {
    grid-template-columns: repeat(11, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--2col {
    grid-template-columns: repeat(2, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--3col {
    grid-template-columns: repeat(3, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--4col {
    grid-template-columns: repeat(4, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--5col {
    grid-template-columns: repeat(5, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--6col {
    grid-template-columns: repeat(6, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--7col {
    grid-template-columns: repeat(7, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--8col {
    grid-template-columns: repeat(8, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--9col {
    grid-template-columns: repeat(9, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--10col {
    grid-template-columns: repeat(10, 1fr); } }

@media (min-width: 1120px) {
  .grid--large--11col {
    grid-template-columns: repeat(11, 1fr); } }

/*
Gutterless Grid

Add `.grid--gutterless` to remove all gutters

Markup:
<div class="grid grid--gutterless grid--small--2col grid--medium--6col grid--large--3col">
    <div class="grid-item bg-base-primary" style="height:50px"></div>
    <div class="grid-item bg-base-secondary" style="height:50px""></div>
    <div class="grid-item bg-base-separator" style="height:50px""></div>
    <div class="grid-item bg-text-primary" style="height:50px""></div>
    <div class="grid-item bg-text-mark" style="height:50px""></div>
    <div class="grid-item bg-state-muted" style="height:50px""></div>
</div>

Styleguide Layout.grid.gutterless
*/
.grid--gutterless {
  grid-gap: 0; }

/*
Card

The `.card` is a common pattern on UX design.

Usually, the card width is limited either by setting a custom width or by stacking them on a flex / grid.

A set of settings are available under its own section on `_config.scss`

A `.card` inside a `.card` has its padding reduced to 1/2

Markup:
<article class="card" style="width:400px; padding: 1.3rem">
	<h3>Title of a card</h3>
	<p>A card can have any content. Their appearance will be honored no matter what.</p>
	<p class="small">This paragraph, for example, uses a <code>.small</code> class</p>
	<div class="card right">
		<a href="#" class="button button--error">Cancel</a>
		<a href="#" class="button button--success">OK</a>
	</div>
</article>

Styleguide Components.card
*/
.card {
  border: 1px solid #dbe2db;
  background: #fff;
  border-radius: 0px;
  padding: 2.7rem;
  box-shadow: 2px 2px 2px 0px rgba(61, 63, 61, 0.1); }
  .card .card {
    padding: 0.675rem; }

/*
Card with Featured Image

A special kind of card that features a full-bleed image.

It requires a slightly different markup than the original `.card` item

Markup:
<!-- Style attributes are only set to avoid style overrides on this style guide! -->
<article class="card card--image" style="width:400px; padding:0;">
	<div class="card__image">
		<img src="https://placeimg.com/400/200/nature" />
	</div>
	<div class="card__contents">
		<h3>Title of a card</h3>
		<p>A card can have any content. Their appearance will be honored no matter what.</p>
		<p class="small">This paragraph, for example, uses a <code>.small</code> class</p>
		<div class="card right">
			<a href="#" class="button button--error">Cancel</a>
			<a href="#" class="button button--success">OK</a>
		</div>
	</div>
</article>

Styleguide Components.card.card-image
*/
.card--image {
  padding: 0; }

.card__contents {
  padding: 1.35rem; }

/*
Navigation menus

Either `<nav>` HTML elements or enabled via the css class `.nav`.

We don't assume a menu-style, horizontal navigation as the default. This is done by using the `.menu` component.

Instead, we only style the text and delete the bullets. The nav items' style can be controlled on `_config.scss` via a set of parameters on the Navigation section

It's supposed to hold links (try "section"), but it can also have empty elements.

It is common the need to disable partially or totally the link appearance. Use `kill-link` or `kill-link-decoration` classes or mixins for this.


Markup:
<section>
  <nav class="{{ modifier_class}} kill-link-decoration">
    <ul>
      <li>Home</li>
      <li><a href="#">Section</a></li>
      <li>Works</li>
      <li>About us</li>
      <li>Contact</li>
      <li>Exit</li>
    </ul>
  </nav>
</section>

Styleguide Base.nav
*/
nav ul,
.nav ul {
  padding: 0;
  margin: 0;
  list-style-type: none; }
  nav ul li,
  .nav ul li {
    margin: 0 1.35rem 0 0;
    font-weight: bold;
    text-transform: uppercase;
    font-size: 16px;
    font-size: 1rem;
    line-height: 22px;
    line-height: 1.35rem;
    letter-spacing: 0.05em; }

/*
Menu

An horizontal menu is a component based on an extended `<nav>` or `.nav`.

Unlike the `nav`, which is a bare-bones item, the menu includes highlighting of links and a set of decoration items.

It is expected that all items on a menu are linked. Empty links can be faked by adding a `<span>` item and combined with the `.disabled` class in order to indicate a deactivated link

Submenus are handled up to the 3rd level. If you need more, you might want to rethink your menu.

Alignment of items can be controlled via helper classes. Defaults to "left"

.center        - Aligns the nav to the center (margin on both sides of items)
.right         - Aligns the nav to the right (margin on the right)

Markup:
<section>
  <nav class="menu {{ modifier_class }}" style="margin-bottom: 200px">
    <ul>
      <li><a href="#">Home</a></li>
      <li>
        <a href="#">Section</a>
          <ul>
            <li><a href="#">Home</a></li>
            <li><a href="#">Section</a></li>
            <li>
              <a href="#">Works</a>
                <ul>
                  <li><a href="#">Home</a></li>
                  <li><a href="#">Section</a></li>
                  <li><a href="#">Works</a></li>
                  <li><a href="#">About us</a></li>
                </ul>
            </li>
            <li><a href="#">About us</a></li>
          </ul>
      </li>
      <li><a href="#">Works</a></li>
      <li><a href="#">About us</a></li>
      <li><span>Contact</span></li>
      <li><span class="disabled">Exit</span></li>
    </ul>
  </nav>
</section>

Styleguide Components.menus
*/
.menu {
  margin: 0;
  padding: 0; }
  .menu li {
    list-style-type: none;
    display: inline-block; }
  .menu a, .menu a:link, .menu a:visited, .menu a:focus, .menu a:hover, .menu a:active {
    text-decoration: none; }
  .menu ul > li {
    margin: 0;
    position: relative;
    z-index: 1; }
    .menu ul > li > a {
      text-align: left;
      display: block;
      padding: 0.675rem;
      white-space: nowrap; }
      .menu ul > li > a, .menu ul > li > a:link {
        color: #3d3f3d; }
      .menu ul > li > a:visited {
        color: #3d3f3d; }
      .menu ul > li > a:focus, .menu ul > li > a:hover {
        color: #1A1A19; }
      .menu ul > li > a:active {
        color: #3d3f3d; }
    .menu ul > li:hover > a, .menu ul > li:focus > a {
      color: #1A1A19;
      background-color: #8197a9; }
    .menu ul > li > span {
      padding: 0.675rem; }
    .menu ul > li > ul {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      z-index: 2;
      min-width: 120%; }
      .menu ul > li > ul > li {
        display: block;
        position: relative; }
        .menu ul > li > ul > li > a {
          display: block;
          padding: 0.3375rem 0.675rem;
          white-space: nowrap;
          background-color: #90a4b3;
          font-size: 13px;
          font-size: 0.8rem;
          line-height: 22px;
          line-height: 1.35rem; }
          .menu ul > li > ul > li > a, .menu ul > li > ul > li > a:link {
            color: #1A1A19;
            text-decoration: underline; }
          .menu ul > li > ul > li > a:visited {
            color: #1A1A19; }
          .menu ul > li > ul > li > a:focus, .menu ul > li > ul > li > a:hover {
            color: #1A1A19;
            text-decoration: none;
            border: none;
            background: transparent; }
          .menu ul > li > ul > li > a:active {
            color: #1A1A19; }
          .menu ul > li > ul > li > a, .menu ul > li > ul > li > a:link, .menu ul > li > ul > li > a:visited, .menu ul > li > ul > li > a:focus, .menu ul > li > ul > li > a:hover, .menu ul > li > ul > li > a:active {
            text-decoration: none; }
          .menu ul > li > ul > li > a:hover, .menu ul > li > ul > li > a:focus {
            color: #FFFFFF;
            background-color: #566571; }
    .menu ul > li > ul > li > ul {
      display: none;
      position: absolute;
      top: 0;
      left: 100%;
      min-width: 100%;
      z-index: 3; }
      .menu ul > li > ul > li > ul li a {
        background-color: #9fb0be;
        font-size: 11px;
        font-size: 0.7rem;
        line-height: 16px;
        line-height: 1.0125rem; }
        .menu ul > li > ul > li > ul li a, .menu ul > li > ul > li > ul li a:link {
          color: #1A1A19;
          text-decoration: underline; }
        .menu ul > li > ul > li > ul li a:visited {
          color: #1A1A19; }
        .menu ul > li > ul > li > ul li a:focus, .menu ul > li > ul > li > ul li a:hover {
          color: #1A1A19;
          text-decoration: none;
          border: none;
          background: transparent; }
        .menu ul > li > ul > li > ul li a:active {
          color: #1A1A19; }
        .menu ul > li > ul > li > ul li a, .menu ul > li > ul > li > ul li a:link, .menu ul > li > ul > li > ul li a:visited, .menu ul > li > ul > li > ul li a:focus, .menu ul > li > ul > li > ul li a:hover, .menu ul > li > ul > li > ul li a:active {
          text-decoration: none; }
        .menu ul > li > ul > li > ul li a:hover, .menu ul > li > ul > li > ul li a:focus {
          color: #FFFFFF;
          background-color: #414c55; }
    .menu ul > li > ul > li:hover > ul {
      display: block; }
    .menu ul > li:hover > ul {
      display: block; }
      .menu ul > li:hover > ul > li {
        display: block; }

/*
TOC (Table of contents)

A toc or table of contents is a vertical menu based off a `<nav>` item.

The first level can be configured on `_config.scss`.

This is a very opinionated component. It won't let `bold` weight to pass below the first depth level, it will apply a progressive reduction of font-size and it will set uppercase from the 3rd level on.

It is common the need to disable partially or totally the link appearance. Use `kill-link` or `kill-link-decoration` classes or mixins for this.

Markup:
<section>
  <nav class="toc kill-link">
    <ul>
      <li><a href="#">Home</a></li>
      <li><a href="#">Section</a></li>
      <li>
        <a href="#">Works</a>
        <ul>
          <li>
            <a href="#">Home</a></li>
            <ul>
              <li><a href="#">Home</a></li>
              <li><a href="#">Section</a></li>
            </ul>
          </li>
          <li><a href="#">Section</a></li>
          <li><a href="#">Works</a></li>
          <li><a href="#">About us</a></li>
          <li><span>Contact</span></li>
          <li><span class="disabled">Exit</span></li>
        </ul>
      </li>
      <li><a href="#">About us</a></li>
      <li><span>Contact</span></li>
      <li><span class="disabled">Exit</span></li>
    </ul>
  </nav>
</section>

Styleguide Components.toc
*/
.toc ul li {
  margin: 0;
  font-weight: bold;
  letter-spacing: initial;
  text-transform: initial;
  font-size: 16px;
  font-size: 1rem;
  line-height: 22px;
  line-height: 1.35rem; }
  .toc ul li ul {
    margin: 0.3375rem 0 0.675rem 1.35rem; }
    .toc ul li ul li {
      font-weight: normal;
      font-size: 15px;
      font-size: 0.95rem;
      line-height: 22px;
      line-height: 1.35rem; }
    .toc ul li ul ul li {
      font-size: 11px;
      font-size: 0.7rem;
      line-height: 16px;
      line-height: 1.0125rem; }

/*
Tag

Used for tag-like elements. They can be keywords, but also small elements that need some visual highlighting.

They need to be set on inline or inline-block elements.

If a link, it changes the link decoration for a background-color modification.

A small margin is applied in order to allow for lists of tags.

Wrappers `.right` and `.center` know how to switch margins.

.tag--success       - Applies the success color
.tag--warning       - Applies the warning color
.tag--error         - Applies the error color
.tag--primary       - Applies the primary color
.tag--secondary     - Applies the secondary color

Markup:
<p><span class="tag {{ modifier_class }}">This is a tag-like element</span><a class="tag {{ modifier_class }}">Another one!</a></p>

Styleguide Components.tag
*/
.tag, .selectr-tag {
  display: inline-block;
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem;
  font-weight: 700;
  letter-spacing: 0;
  padding: 0 0.45rem;
  background-color: #dbe2db;
  color: #1A1A19;
  border-radius: 0px;
  margin-right: 0.45rem;
  font-weight: normal; }
  .tag.tag--success, .tag--success.selectr-tag {
    background-color: #cfffe4;
    color: #1A1A19; }
  .tag.tag--warning, .tag--warning.selectr-tag {
    background-color: #fffbc4;
    color: #1A1A19; }
  .tag.tag--error, .tag--error.selectr-tag {
    background-color: #ffc4c8;
    color: #1A1A19; }
  .tag.tag--primary, .tag--primary.selectr-tag {
    background-color: #b1cfe6;
    color: #1A1A19; }
  .tag.tag--secondary, .tag--secondary.selectr-tag {
    background-color: #8197a9;
    color: #1A1A19; }
  .right .tag, .right .selectr-tag {
    margin-right: 0;
    margin-left: 0.45rem; }
  .center .tag, .center .selectr-tag {
    margin-right: 0.225rem;
    margin-left: 0.225rem; }

a.tag, a.selectr-tag {
  cursor: pointer; }
  a.tag, a.selectr-tag, a.tag:link, a.selectr-tag:link, a.tag:visited, a.selectr-tag:visited, a.tag:focus, a.selectr-tag:focus, a.tag:hover, a.selectr-tag:hover, a.tag:active, a.selectr-tag:active {
    text-decoration: none; }
  a.tag:hover, a.selectr-tag:hover, a.tag:focus, a.selectr-tag:focus {
    background-color: #939793;
    color: #1A1A19; }
  a.tag.tag--success:hover, a.tag--success.selectr-tag:hover, a.tag.tag--success:focus, a.tag--success.selectr-tag:focus {
    background-color: #8bab99;
    color: #1A1A19; }
  a.tag.tag--warning:hover, a.tag--warning.selectr-tag:hover, a.tag.tag--warning:focus, a.tag--warning.selectr-tag:focus {
    background-color: #aba883;
    color: #1A1A19; }
  a.tag.tag--error:hover, a.tag--error.selectr-tag:hover, a.tag.tag--error:focus, a.tag--error.selectr-tag:focus {
    background-color: #ab8386;
    color: #1A1A19; }
  a.tag.tag--primary:hover, a.tag--primary.selectr-tag:hover, a.tag.tag--primary:focus, a.tag--primary.selectr-tag:focus {
    background-color: #778b9a;
    color: #FFFFFF; }
    a.tag.tag--primary:hover a, a.tag--primary.selectr-tag:hover a, a.tag.tag--primary:hover a:link, a.tag--primary.selectr-tag:hover a:link, a.tag.tag--primary:focus a, a.tag--primary.selectr-tag:focus a, a.tag.tag--primary:focus a:link, a.tag--primary.selectr-tag:focus a:link {
      color: #fff;
      text-decoration: underline; }
    a.tag.tag--primary:hover a:visited, a.tag--primary.selectr-tag:hover a:visited, a.tag.tag--primary:focus a:visited, a.tag--primary.selectr-tag:focus a:visited {
      color: #fff; }
    a.tag.tag--primary:hover a:focus, a.tag--primary.selectr-tag:hover a:focus, a.tag.tag--primary:hover a:hover, a.tag--primary.selectr-tag:hover a:hover, a.tag.tag--primary:focus a:focus, a.tag--primary.selectr-tag:focus a:focus, a.tag.tag--primary:focus a:hover, a.tag--primary.selectr-tag:focus a:hover {
      color: #e3f2ff;
      text-decoration: none;
      border: none;
      background: transparent; }
    a.tag.tag--primary:hover a:active, a.tag--primary.selectr-tag:hover a:active, a.tag.tag--primary:focus a:active, a.tag--primary.selectr-tag:focus a:active {
      color: #e3f2ff; }
  a.tag.tag--secondary:hover, a.tag--secondary.selectr-tag:hover, a.tag.tag--secondary:focus, a.tag--secondary.selectr-tag:focus {
    background-color: #566571;
    color: #FFFFFF; }
    a.tag.tag--secondary:hover a, a.tag--secondary.selectr-tag:hover a, a.tag.tag--secondary:hover a:link, a.tag--secondary.selectr-tag:hover a:link, a.tag.tag--secondary:focus a, a.tag--secondary.selectr-tag:focus a, a.tag.tag--secondary:focus a:link, a.tag--secondary.selectr-tag:focus a:link {
      color: #fff;
      text-decoration: underline; }
    a.tag.tag--secondary:hover a:visited, a.tag--secondary.selectr-tag:hover a:visited, a.tag.tag--secondary:focus a:visited, a.tag--secondary.selectr-tag:focus a:visited {
      color: #fff; }
    a.tag.tag--secondary:hover a:focus, a.tag--secondary.selectr-tag:hover a:focus, a.tag.tag--secondary:hover a:hover, a.tag--secondary.selectr-tag:hover a:hover, a.tag.tag--secondary:focus a:focus, a.tag--secondary.selectr-tag:focus a:focus, a.tag.tag--secondary:focus a:hover, a.tag--secondary.selectr-tag:focus a:hover {
      color: #e3f2ff;
      text-decoration: none;
      border: none;
      background: transparent; }
    a.tag.tag--secondary:hover a:active, a.tag--secondary.selectr-tag:hover a:active, a.tag.tag--secondary:focus a:active, a.tag--secondary.selectr-tag:focus a:active {
      color: #e3f2ff; }

/*
Alerts

Boxes with background-colors to draw the user's attention towards specific messages.

Any alert is automatically set as a `.text` to prevent paragraphs for setting an extra space.

.alert--success     - Sets the color to indicate a positive action or message
.alert--warning     - Sets the color to indicate a warning
.alert--error       - Sets the color to indicate a negative action or message

Markup:
<section class="alert {{ modifier_class}}">
	<p class="minititle">Hey ho, let's go</p>
	<p>Dear user, you are required to <a href="#">read this very specific message</a> and take some action</p>
</section>


Styleguide Components.alert
*/
.alert {
  padding: 1.35rem;
  border-radius: 0px;
  background-color: #e7e9e7;
  color: #575a57; }
  .alert a, .alert a:link {
    color: #575a57;
    text-decoration: underline; }
  .alert a:visited {
    color: #575a57; }
  .alert a:focus, .alert a:hover {
    color: #aeb4ae;
    text-decoration: none;
    border: none;
    background: transparent; }
  .alert a:active {
    color: #575a57; }

.alert--success {
  background-color: #f1fff7;
  color: #688072; }
  .alert--success a, .alert--success a:link {
    color: #688072;
    text-decoration: underline; }
  .alert--success a:visited {
    color: #688072; }
  .alert--success a:focus, .alert--success a:hover {
    color: #cfffe4;
    text-decoration: none;
    border: none;
    background: transparent; }
  .alert--success a:active {
    color: #688072; }

.alert--warning {
  background-color: #fffeed;
  color: #807e62; }
  .alert--warning a, .alert--warning a:link {
    color: #807e62;
    text-decoration: underline; }
  .alert--warning a:visited {
    color: #807e62; }
  .alert--warning a:focus, .alert--warning a:hover {
    color: #fffbc4;
    text-decoration: none;
    border: none;
    background: transparent; }
  .alert--warning a:active {
    color: #807e62; }

.alert--error {
  background-color: #ffedef;
  color: #806264; }
  .alert--error a, .alert--error a:link {
    color: #806264;
    text-decoration: underline; }
  .alert--error a:visited {
    color: #806264; }
  .alert--error a:focus, .alert--error a:hover {
    color: #ffc4c8;
    text-decoration: none;
    border: none;
    background: transparent; }
  .alert--error a:active {
    color: #806264; }

/*
Margins

`$gutter` is applied as margin.

Markup:
<p class="{{modifier_class}}">Hello, i have som margin applied</p>

.m              - Applies all margins
.mt             - Applies a margin-top
.mr             - Applies a margin-right
.mb             - Applies a margin-bottom
.ml             - Applies a margin-left
.m0             - Deletes all margins

Styleguide Huesitos.margins
*/
.m {
  margin: 1.35rem; }

.mt {
  margin-top: 1.35rem; }

.mr {
  margin-right: 1.35rem; }

.mb {
  margin-bottom: 1.35rem; }

.ml {
  margin-left: 1.35rem; }

.m0 {
  margin: 0; }

/*
Paddings

`$gutter` is applied as padding.

Markup:
<p class="{{modifier_class}}">Hello, i have a padding applied</p>

.p              - Applies all paddings
.pt             - Applies a padding-top
.pr             - Applies a padding-right
.pb             - Applies a padding-bottom
.pl             - Applies a padding-left
.p0             - Deletes all paddings

Styleguide Huesitos.paddings
*/
.p {
  padding: 1.35rem; }

.pt {
  padding-top: 1.35rem; }

.pr, .selectr-tag {
  padding-right: 1.35rem; }

.pb {
  padding-bottom: 1.35rem; }

.pl {
  padding-left: 1.35rem; }

.p0 {
  padding: 0; }

/*
Borders

Uses `$separator-color` by default.

Markup:
<p class="{{modifier_class}}">Hello, i have some border applied</p>

.b              - Applies all borders
.bt             - Applies a border-top
.br             - Applies a border-right
.bb             - Applies a border-bottom
.bl             - Applies a border-left
.b0             - Deletes all borders

Styleguide Huesitos.borders
*/
.b {
  border: 1px solid #dbe2db; }

.bt {
  border-top: 1px solid #dbe2db; }

.br {
  border-right: 1px solid #dbe2db; }

.bb {
  border-bottom: 1px solid #dbe2db; }

.bl {
  border-left: 1px solid #dbe2db; }

.b0 {
  border: none; }

/*
    Background Color

    A set of helper classes that map to common colors from the palette.

    The text color is contrasted correctly.

    Classes are auto-generated based on the sass `$colors` map and follow the schema `$bg-$palette-$name`.

    We showcase some examples here, but the list of classes could be much bigger or smaller, depending on your color palette.

    You can avoid bloating your css with these helper classes by setting `$generate-color-classes: false`.

    Markup:
    <p class="minititle">Base</p>
    <section class="grid grid--5col">
        <div class="bg-base-primary p strong half-gutter" style="height:90px">Primary + <a href="#">link</a></div>
        <div class="bg-base-secondary p strong half-gutter" style="height:90px">Secondary</div>
    </section>
    <p class="minititle">State</p>
    <section class="grid grid--5col">
        <div class="bg-state-success p strong half-gutter" style="height:90px">Success</div>
        <div class="bg-state-warning p strong half-gutter" style="height:90px">Warning</div>
        <div class="bg-state-error p strong half-gutter" style="height:90px">Error</div>
        <div class="bg-state-muted p strong half-gutter" style="height:90px">Muted</div>
    </section>
    <p class="minititle">Blue palette</p>
    <section class="grid grid--5col">
        <div class="bg-blue-0 p strong half-gutter" style="height:90px">Shade #0</div>
        <div class="bg-blue-1 p strong half-gutter" style="height:90px">Shade #1</div>
        <div class="bg-blue-2 p strong half-gutter" style="height:90px">Shade #2</div>
        <div class="bg-blue-3 p strong half-gutter" style="height:90px">Shade #3</div>
        <div class="bg-blue-4 p strong half-gutter" style="height:90px">Shade #4</div>
        <div class="bg-blue-5 p strong half-gutter" style="height:90px">Shade #5</div>
        <div class="bg-blue-6 p strong half-gutter" style="height:90px">Shade #6</div>
        <div class="bg-blue-7 p strong half-gutter" style="height:90px">Shade #7</div>
        <div class="bg-blue-8 p strong half-gutter" style="height:90px">Shade #8</div>
        <div class="bg-blue-9 p strong half-gutter" style="height:90px">Shade #9</div>
    </section>
    <p class="minititle">Red palette</p>
    <section class="grid grid--5col">
        <div class="bg-red-0 p strong half-gutter" style="height:90px">Shade #0</div>
        <div class="bg-red-1 p strong half-gutter" style="height:90px">Shade #1</div>
        <div class="bg-red-2 p strong half-gutter" style="height:90px">Shade #2</div>
        <div class="bg-red-3 p strong half-gutter" style="height:90px">Shade #3</div>
        <div class="bg-red-4 p strong half-gutter" style="height:90px">Shade #4</div>
        <div class="bg-red-5 p strong half-gutter" style="height:90px">Shade #5</div>
        <div class="bg-red-6 p strong half-gutter" style="height:90px">Shade #6</div>
        <div class="bg-red-7 p strong half-gutter" style="height:90px">Shade #7</div>
        <div class="bg-red-8 p strong half-gutter" style="height:90px">Shade #8</div>
        <div class="bg-red-9 p strong half-gutter" style="height:90px">Shade #9</div>
    </section>
    <p class="minititle">Green palette</p>
    <section class="grid grid--5col">
        <div class="bg-green-0 p strong half-gutter" style="height:90px">Shade #0</div>
        <div class="bg-green-1 p strong half-gutter" style="height:90px">Shade #1</div>
        <div class="bg-green-2 p strong half-gutter" style="height:90px">Shade #2</div>
        <div class="bg-green-3 p strong half-gutter" style="height:90px">Shade #3</div>
        <div class="bg-green-4 p strong half-gutter" style="height:90px">Shade #4</div>
        <div class="bg-green-5 p strong half-gutter" style="height:90px">Shade #5</div>
        <div class="bg-green-6 p strong half-gutter" style="height:90px">Shade #6</div>
        <div class="bg-green-7 p strong half-gutter" style="height:90px">Shade #7</div>
        <div class="bg-green-8 p strong half-gutter" style="height:90px">Shade #8</div>
        <div class="bg-green-9 p strong half-gutter" style="height:90px">Shade #9</div>
    </section>
    <p class="minititle">Gray palette</p>
    <section class="grid grid--5col">
        <div class="bg-gray-0 p strong half-gutter" style="height:90px">Shade #0</div>
        <div class="bg-gray-1 p strong half-gutter" style="height:90px">Shade #1</div>
        <div class="bg-gray-2 p strong half-gutter" style="height:90px">Shade #2</div>
        <div class="bg-gray-3 p strong half-gutter" style="height:90px">Shade #3</div>
        <div class="bg-gray-4 p strong half-gutter" style="height:90px">Shade #4</div>
        <div class="bg-gray-5 p strong half-gutter" style="height:90px">Shade #5</div>
        <div class="bg-gray-6 p strong half-gutter" style="height:90px">Shade #6</div>
        <div class="bg-gray-7 p strong half-gutter" style="height:90px">Shade #7</div>
        <div class="bg-gray-8 p strong half-gutter" style="height:90px">Shade #8</div>
        <div class="bg-gray-9 p strong half-gutter" style="height:90px">Shade #9</div>
    </section>

    Styleguide Huesitos.Color
    */
.bg-base-primary {
  background-color: #b1cfe6;
  color: #1A1A19; }
  .bg-base-primary h1, .bg-base-primary .h1,
  .bg-base-primary h2, .bg-base-primary .h2,
  .bg-base-primary h3, .bg-base-primary .h3,
  .bg-base-primary h4, .bg-base-primary .h4,
  .bg-base-primary h5, .bg-base-primary .h5 h6, .bg-base-primary .h6 {
    color: inherit; }

.bg-base-secondary {
  background-color: #8197a9;
  color: #1A1A19; }
  .bg-base-secondary h1, .bg-base-secondary .h1,
  .bg-base-secondary h2, .bg-base-secondary .h2,
  .bg-base-secondary h3, .bg-base-secondary .h3,
  .bg-base-secondary h4, .bg-base-secondary .h4,
  .bg-base-secondary h5, .bg-base-secondary .h5 h6, .bg-base-secondary .h6 {
    color: inherit; }

.bg-base-separator {
  background-color: #dbe2db;
  color: #1A1A19; }
  .bg-base-separator h1, .bg-base-separator .h1,
  .bg-base-separator h2, .bg-base-separator .h2,
  .bg-base-separator h3, .bg-base-separator .h3,
  .bg-base-separator h4, .bg-base-separator .h4,
  .bg-base-separator h5, .bg-base-separator .h5 h6, .bg-base-separator .h6 {
    color: inherit; }

.bg-base-black {
  background-color: #3d3f3d;
  color: #FFFFFF; }
  .bg-base-black a, .bg-base-black a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-base-black a:visited {
    color: #fff; }
  .bg-base-black a:focus, .bg-base-black a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-base-black a:active {
    color: #e3f2ff; }
  .bg-base-black h1, .bg-base-black .h1,
  .bg-base-black h2, .bg-base-black .h2,
  .bg-base-black h3, .bg-base-black .h3,
  .bg-base-black h4, .bg-base-black .h4,
  .bg-base-black h5, .bg-base-black .h5 h6, .bg-base-black .h6 {
    color: inherit; }

.bg-base-white {
  background-color: #fff;
  color: #1A1A19; }
  .bg-base-white h1, .bg-base-white .h1,
  .bg-base-white h2, .bg-base-white .h2,
  .bg-base-white h3, .bg-base-white .h3,
  .bg-base-white h4, .bg-base-white .h4,
  .bg-base-white h5, .bg-base-white .h5 h6, .bg-base-white .h6 {
    color: inherit; }

.bg-text-primary {
  background-color: #3d3f3d;
  color: #FFFFFF; }
  .bg-text-primary a, .bg-text-primary a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-text-primary a:visited {
    color: #fff; }
  .bg-text-primary a:focus, .bg-text-primary a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-text-primary a:active {
    color: #e3f2ff; }
  .bg-text-primary h1, .bg-text-primary .h1,
  .bg-text-primary h2, .bg-text-primary .h2,
  .bg-text-primary h3, .bg-text-primary .h3,
  .bg-text-primary h4, .bg-text-primary .h4,
  .bg-text-primary h5, .bg-text-primary .h5 h6, .bg-text-primary .h6 {
    color: inherit; }

.bg-text-heading {
  background-color: #5d5f79;
  color: #FFFFFF; }
  .bg-text-heading a, .bg-text-heading a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-text-heading a:visited {
    color: #fff; }
  .bg-text-heading a:focus, .bg-text-heading a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-text-heading a:active {
    color: #e3f2ff; }
  .bg-text-heading h1, .bg-text-heading .h1,
  .bg-text-heading h2, .bg-text-heading .h2,
  .bg-text-heading h3, .bg-text-heading .h3,
  .bg-text-heading h4, .bg-text-heading .h4,
  .bg-text-heading h5, .bg-text-heading .h5 h6, .bg-text-heading .h6 {
    color: inherit; }

.bg-text-mark {
  background-color: #ffdec4;
  color: #1A1A19; }
  .bg-text-mark h1, .bg-text-mark .h1,
  .bg-text-mark h2, .bg-text-mark .h2,
  .bg-text-mark h3, .bg-text-mark .h3,
  .bg-text-mark h4, .bg-text-mark .h4,
  .bg-text-mark h5, .bg-text-mark .h5 h6, .bg-text-mark .h6 {
    color: inherit; }

.bg-background-dark {
  background-color: #696c69;
  color: #FFFFFF; }
  .bg-background-dark a, .bg-background-dark a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-background-dark a:visited {
    color: #fff; }
  .bg-background-dark a:focus, .bg-background-dark a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-background-dark a:active {
    color: #e3f2ff; }
  .bg-background-dark h1, .bg-background-dark .h1,
  .bg-background-dark h2, .bg-background-dark .h2,
  .bg-background-dark h3, .bg-background-dark .h3,
  .bg-background-dark h4, .bg-background-dark .h4,
  .bg-background-dark h5, .bg-background-dark .h5 h6, .bg-background-dark .h6 {
    color: inherit; }

.bg-background-dim {
  background-color: #eaeeea;
  color: #1A1A19; }
  .bg-background-dim h1, .bg-background-dim .h1,
  .bg-background-dim h2, .bg-background-dim .h2,
  .bg-background-dim h3, .bg-background-dim .h3,
  .bg-background-dim h4, .bg-background-dim .h4,
  .bg-background-dim h5, .bg-background-dim .h5 h6, .bg-background-dim .h6 {
    color: inherit; }

.bg-background-light {
  background-color: #f8f9f8;
  color: #1A1A19; }
  .bg-background-light h1, .bg-background-light .h1,
  .bg-background-light h2, .bg-background-light .h2,
  .bg-background-light h3, .bg-background-light .h3,
  .bg-background-light h4, .bg-background-light .h4,
  .bg-background-light h5, .bg-background-light .h5 h6, .bg-background-light .h6 {
    color: inherit; }

.bg-state-muted {
  background-color: #eaeeea;
  color: #1A1A19; }
  .bg-state-muted h1, .bg-state-muted .h1,
  .bg-state-muted h2, .bg-state-muted .h2,
  .bg-state-muted h3, .bg-state-muted .h3,
  .bg-state-muted h4, .bg-state-muted .h4,
  .bg-state-muted h5, .bg-state-muted .h5 h6, .bg-state-muted .h6 {
    color: inherit; }

.bg-state-success {
  background-color: #cfffe4;
  color: #1A1A19; }
  .bg-state-success h1, .bg-state-success .h1,
  .bg-state-success h2, .bg-state-success .h2,
  .bg-state-success h3, .bg-state-success .h3,
  .bg-state-success h4, .bg-state-success .h4,
  .bg-state-success h5, .bg-state-success .h5 h6, .bg-state-success .h6 {
    color: inherit; }

.bg-state-warning {
  background-color: #fffbc4;
  color: #1A1A19; }
  .bg-state-warning h1, .bg-state-warning .h1,
  .bg-state-warning h2, .bg-state-warning .h2,
  .bg-state-warning h3, .bg-state-warning .h3,
  .bg-state-warning h4, .bg-state-warning .h4,
  .bg-state-warning h5, .bg-state-warning .h5 h6, .bg-state-warning .h6 {
    color: inherit; }

.bg-state-error {
  background-color: #ffc4c8;
  color: #1A1A19; }
  .bg-state-error h1, .bg-state-error .h1,
  .bg-state-error h2, .bg-state-error .h2,
  .bg-state-error h3, .bg-state-error .h3,
  .bg-state-error h4, .bg-state-error .h4,
  .bg-state-error h5, .bg-state-error .h5 h6, .bg-state-error .h6 {
    color: inherit; }

.bg-blue-0 {
  background-color: #f6fbff;
  color: #1A1A19; }
  .bg-blue-0 h1, .bg-blue-0 .h1,
  .bg-blue-0 h2, .bg-blue-0 .h2,
  .bg-blue-0 h3, .bg-blue-0 .h3,
  .bg-blue-0 h4, .bg-blue-0 .h4,
  .bg-blue-0 h5, .bg-blue-0 .h5 h6, .bg-blue-0 .h6 {
    color: inherit; }

.bg-blue-1 {
  background-color: #ecf6ff;
  color: #1A1A19; }
  .bg-blue-1 h1, .bg-blue-1 .h1,
  .bg-blue-1 h2, .bg-blue-1 .h2,
  .bg-blue-1 h3, .bg-blue-1 .h3,
  .bg-blue-1 h4, .bg-blue-1 .h4,
  .bg-blue-1 h5, .bg-blue-1 .h5 h6, .bg-blue-1 .h6 {
    color: inherit; }

.bg-blue-2 {
  background-color: #e3f2ff;
  color: #1A1A19; }
  .bg-blue-2 h1, .bg-blue-2 .h1,
  .bg-blue-2 h2, .bg-blue-2 .h2,
  .bg-blue-2 h3, .bg-blue-2 .h3,
  .bg-blue-2 h4, .bg-blue-2 .h4,
  .bg-blue-2 h5, .bg-blue-2 .h5 h6, .bg-blue-2 .h6 {
    color: inherit; }

.bg-blue-3 {
  background-color: #d9eeff;
  color: #1A1A19; }
  .bg-blue-3 h1, .bg-blue-3 .h1,
  .bg-blue-3 h2, .bg-blue-3 .h2,
  .bg-blue-3 h3, .bg-blue-3 .h3,
  .bg-blue-3 h4, .bg-blue-3 .h4,
  .bg-blue-3 h5, .bg-blue-3 .h5 h6, .bg-blue-3 .h6 {
    color: inherit; }

.bg-blue-4 {
  background-color: #cee9ff;
  color: #1A1A19; }
  .bg-blue-4 h1, .bg-blue-4 .h1,
  .bg-blue-4 h2, .bg-blue-4 .h2,
  .bg-blue-4 h3, .bg-blue-4 .h3,
  .bg-blue-4 h4, .bg-blue-4 .h4,
  .bg-blue-4 h5, .bg-blue-4 .h5 h6, .bg-blue-4 .h6 {
    color: inherit; }

.bg-blue-5 {
  background-color: #c4e5ff;
  color: #1A1A19; }
  .bg-blue-5 h1, .bg-blue-5 .h1,
  .bg-blue-5 h2, .bg-blue-5 .h2,
  .bg-blue-5 h3, .bg-blue-5 .h3,
  .bg-blue-5 h4, .bg-blue-5 .h4,
  .bg-blue-5 h5, .bg-blue-5 .h5 h6, .bg-blue-5 .h6 {
    color: inherit; }

.bg-blue-6 {
  background-color: #b1cfe6;
  color: #1A1A19; }
  .bg-blue-6 h1, .bg-blue-6 .h1,
  .bg-blue-6 h2, .bg-blue-6 .h2,
  .bg-blue-6 h3, .bg-blue-6 .h3,
  .bg-blue-6 h4, .bg-blue-6 .h4,
  .bg-blue-6 h5, .bg-blue-6 .h5 h6, .bg-blue-6 .h6 {
    color: inherit; }

.bg-blue-7 {
  background-color: #9cb6cb;
  color: #1A1A19; }
  .bg-blue-7 h1, .bg-blue-7 .h1,
  .bg-blue-7 h2, .bg-blue-7 .h2,
  .bg-blue-7 h3, .bg-blue-7 .h3,
  .bg-blue-7 h4, .bg-blue-7 .h4,
  .bg-blue-7 h5, .bg-blue-7 .h5 h6, .bg-blue-7 .h6 {
    color: inherit; }

.bg-blue-8 {
  background-color: #8197a9;
  color: #1A1A19; }
  .bg-blue-8 h1, .bg-blue-8 .h1,
  .bg-blue-8 h2, .bg-blue-8 .h2,
  .bg-blue-8 h3, .bg-blue-8 .h3,
  .bg-blue-8 h4, .bg-blue-8 .h4,
  .bg-blue-8 h5, .bg-blue-8 .h5 h6, .bg-blue-8 .h6 {
    color: inherit; }

.bg-blue-9 {
  background-color: #5e6e7a;
  color: #FFFFFF; }
  .bg-blue-9 a, .bg-blue-9 a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-blue-9 a:visited {
    color: #fff; }
  .bg-blue-9 a:focus, .bg-blue-9 a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-blue-9 a:active {
    color: #e3f2ff; }
  .bg-blue-9 h1, .bg-blue-9 .h1,
  .bg-blue-9 h2, .bg-blue-9 .h2,
  .bg-blue-9 h3, .bg-blue-9 .h3,
  .bg-blue-9 h4, .bg-blue-9 .h4,
  .bg-blue-9 h5, .bg-blue-9 .h5 h6, .bg-blue-9 .h6 {
    color: inherit; }

.bg-green-0 {
  background-color: #f6fffa;
  color: #1A1A19; }
  .bg-green-0 h1, .bg-green-0 .h1,
  .bg-green-0 h2, .bg-green-0 .h2,
  .bg-green-0 h3, .bg-green-0 .h3,
  .bg-green-0 h4, .bg-green-0 .h4,
  .bg-green-0 h5, .bg-green-0 .h5 h6, .bg-green-0 .h6 {
    color: inherit; }

.bg-green-1 {
  background-color: #edfff5;
  color: #1A1A19; }
  .bg-green-1 h1, .bg-green-1 .h1,
  .bg-green-1 h2, .bg-green-1 .h2,
  .bg-green-1 h3, .bg-green-1 .h3,
  .bg-green-1 h4, .bg-green-1 .h4,
  .bg-green-1 h5, .bg-green-1 .h5 h6, .bg-green-1 .h6 {
    color: inherit; }

.bg-green-2 {
  background-color: #e3ffef;
  color: #1A1A19; }
  .bg-green-2 h1, .bg-green-2 .h1,
  .bg-green-2 h2, .bg-green-2 .h2,
  .bg-green-2 h3, .bg-green-2 .h3,
  .bg-green-2 h4, .bg-green-2 .h4,
  .bg-green-2 h5, .bg-green-2 .h5 h6, .bg-green-2 .h6 {
    color: inherit; }

.bg-green-3 {
  background-color: #d9ffea;
  color: #1A1A19; }
  .bg-green-3 h1, .bg-green-3 .h1,
  .bg-green-3 h2, .bg-green-3 .h2,
  .bg-green-3 h3, .bg-green-3 .h3,
  .bg-green-3 h4, .bg-green-3 .h4,
  .bg-green-3 h5, .bg-green-3 .h5 h6, .bg-green-3 .h6 {
    color: inherit; }

.bg-green-4 {
  background-color: #cfffe4;
  color: #1A1A19; }
  .bg-green-4 h1, .bg-green-4 .h1,
  .bg-green-4 h2, .bg-green-4 .h2,
  .bg-green-4 h3, .bg-green-4 .h3,
  .bg-green-4 h4, .bg-green-4 .h4,
  .bg-green-4 h5, .bg-green-4 .h5 h6, .bg-green-4 .h6 {
    color: inherit; }

.bg-green-5 {
  background-color: #c4ffde;
  color: #1A1A19; }
  .bg-green-5 h1, .bg-green-5 .h1,
  .bg-green-5 h2, .bg-green-5 .h2,
  .bg-green-5 h3, .bg-green-5 .h3,
  .bg-green-5 h4, .bg-green-5 .h4,
  .bg-green-5 h5, .bg-green-5 .h5 h6, .bg-green-5 .h6 {
    color: inherit; }

.bg-green-6 {
  background-color: #b1e7c9;
  color: #1A1A19; }
  .bg-green-6 h1, .bg-green-6 .h1,
  .bg-green-6 h2, .bg-green-6 .h2,
  .bg-green-6 h3, .bg-green-6 .h3,
  .bg-green-6 h4, .bg-green-6 .h4,
  .bg-green-6 h5, .bg-green-6 .h5 h6, .bg-green-6 .h6 {
    color: inherit; }

.bg-green-7 {
  background-color: #9ccbb0;
  color: #1A1A19; }
  .bg-green-7 h1, .bg-green-7 .h1,
  .bg-green-7 h2, .bg-green-7 .h2,
  .bg-green-7 h3, .bg-green-7 .h3,
  .bg-green-7 h4, .bg-green-7 .h4,
  .bg-green-7 h5, .bg-green-7 .h5 h6, .bg-green-7 .h6 {
    color: inherit; }

.bg-green-8 {
  background-color: #82a993;
  color: #1A1A19; }
  .bg-green-8 h1, .bg-green-8 .h1,
  .bg-green-8 h2, .bg-green-8 .h2,
  .bg-green-8 h3, .bg-green-8 .h3,
  .bg-green-8 h4, .bg-green-8 .h4,
  .bg-green-8 h5, .bg-green-8 .h5 h6, .bg-green-8 .h6 {
    color: inherit; }

.bg-green-9 {
  background-color: #5e7b6b;
  color: #FFFFFF; }
  .bg-green-9 a, .bg-green-9 a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-green-9 a:visited {
    color: #fff; }
  .bg-green-9 a:focus, .bg-green-9 a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-green-9 a:active {
    color: #e3f2ff; }
  .bg-green-9 h1, .bg-green-9 .h1,
  .bg-green-9 h2, .bg-green-9 .h2,
  .bg-green-9 h3, .bg-green-9 .h3,
  .bg-green-9 h4, .bg-green-9 .h4,
  .bg-green-9 h5, .bg-green-9 .h5 h6, .bg-green-9 .h6 {
    color: inherit; }

.bg-red-0 {
  background-color: #fff6f7;
  color: #1A1A19; }
  .bg-red-0 h1, .bg-red-0 .h1,
  .bg-red-0 h2, .bg-red-0 .h2,
  .bg-red-0 h3, .bg-red-0 .h3,
  .bg-red-0 h4, .bg-red-0 .h4,
  .bg-red-0 h5, .bg-red-0 .h5 h6, .bg-red-0 .h6 {
    color: inherit; }

.bg-red-1 {
  background-color: #ffedee;
  color: #1A1A19; }
  .bg-red-1 h1, .bg-red-1 .h1,
  .bg-red-1 h2, .bg-red-1 .h2,
  .bg-red-1 h3, .bg-red-1 .h3,
  .bg-red-1 h4, .bg-red-1 .h4,
  .bg-red-1 h5, .bg-red-1 .h5 h6, .bg-red-1 .h6 {
    color: inherit; }

.bg-red-2 {
  background-color: #ffe4e5;
  color: #1A1A19; }
  .bg-red-2 h1, .bg-red-2 .h1,
  .bg-red-2 h2, .bg-red-2 .h2,
  .bg-red-2 h3, .bg-red-2 .h3,
  .bg-red-2 h4, .bg-red-2 .h4,
  .bg-red-2 h5, .bg-red-2 .h5 h6, .bg-red-2 .h6 {
    color: inherit; }

.bg-red-3 {
  background-color: #ffdadc;
  color: #1A1A19; }
  .bg-red-3 h1, .bg-red-3 .h1,
  .bg-red-3 h2, .bg-red-3 .h2,
  .bg-red-3 h3, .bg-red-3 .h3,
  .bg-red-3 h4, .bg-red-3 .h4,
  .bg-red-3 h5, .bg-red-3 .h5 h6, .bg-red-3 .h6 {
    color: inherit; }

.bg-red-4 {
  background-color: #ffcfd2;
  color: #1A1A19; }
  .bg-red-4 h1, .bg-red-4 .h1,
  .bg-red-4 h2, .bg-red-4 .h2,
  .bg-red-4 h3, .bg-red-4 .h3,
  .bg-red-4 h4, .bg-red-4 .h4,
  .bg-red-4 h5, .bg-red-4 .h5 h6, .bg-red-4 .h6 {
    color: inherit; }

.bg-red-5 {
  background-color: #ffc4c8;
  color: #1A1A19; }
  .bg-red-5 h1, .bg-red-5 .h1,
  .bg-red-5 h2, .bg-red-5 .h2,
  .bg-red-5 h3, .bg-red-5 .h3,
  .bg-red-5 h4, .bg-red-5 .h4,
  .bg-red-5 h5, .bg-red-5 .h5 h6, .bg-red-5 .h6 {
    color: inherit; }

.bg-red-6 {
  background-color: #e6b1b5;
  color: #1A1A19; }
  .bg-red-6 h1, .bg-red-6 .h1,
  .bg-red-6 h2, .bg-red-6 .h2,
  .bg-red-6 h3, .bg-red-6 .h3,
  .bg-red-6 h4, .bg-red-6 .h4,
  .bg-red-6 h5, .bg-red-6 .h5 h6, .bg-red-6 .h6 {
    color: inherit; }

.bg-red-7 {
  background-color: #ca9b9f;
  color: #1A1A19; }
  .bg-red-7 h1, .bg-red-7 .h1,
  .bg-red-7 h2, .bg-red-7 .h2,
  .bg-red-7 h3, .bg-red-7 .h3,
  .bg-red-7 h4, .bg-red-7 .h4,
  .bg-red-7 h5, .bg-red-7 .h5 h6, .bg-red-7 .h6 {
    color: inherit; }

.bg-red-8 {
  background-color: #a88184;
  color: #1A1A19; }
  .bg-red-8 h1, .bg-red-8 .h1,
  .bg-red-8 h2, .bg-red-8 .h2,
  .bg-red-8 h3, .bg-red-8 .h3,
  .bg-red-8 h4, .bg-red-8 .h4,
  .bg-red-8 h5, .bg-red-8 .h5 h6, .bg-red-8 .h6 {
    color: inherit; }

.bg-red-9 {
  background-color: #7a5d5f;
  color: #FFFFFF; }
  .bg-red-9 a, .bg-red-9 a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-red-9 a:visited {
    color: #fff; }
  .bg-red-9 a:focus, .bg-red-9 a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-red-9 a:active {
    color: #e3f2ff; }
  .bg-red-9 h1, .bg-red-9 .h1,
  .bg-red-9 h2, .bg-red-9 .h2,
  .bg-red-9 h3, .bg-red-9 .h3,
  .bg-red-9 h4, .bg-red-9 .h4,
  .bg-red-9 h5, .bg-red-9 .h5 h6, .bg-red-9 .h6 {
    color: inherit; }

.bg-gray-0 {
  background-color: #f8f9f8;
  color: #1A1A19; }
  .bg-gray-0 h1, .bg-gray-0 .h1,
  .bg-gray-0 h2, .bg-gray-0 .h2,
  .bg-gray-0 h3, .bg-gray-0 .h3,
  .bg-gray-0 h4, .bg-gray-0 .h4,
  .bg-gray-0 h5, .bg-gray-0 .h5 h6, .bg-gray-0 .h6 {
    color: inherit; }

.bg-gray-1 {
  background-color: #eaeeea;
  color: #1A1A19; }
  .bg-gray-1 h1, .bg-gray-1 .h1,
  .bg-gray-1 h2, .bg-gray-1 .h2,
  .bg-gray-1 h3, .bg-gray-1 .h3,
  .bg-gray-1 h4, .bg-gray-1 .h4,
  .bg-gray-1 h5, .bg-gray-1 .h5 h6, .bg-gray-1 .h6 {
    color: inherit; }

.bg-gray-2 {
  background-color: #dbe2db;
  color: #1A1A19; }
  .bg-gray-2 h1, .bg-gray-2 .h1,
  .bg-gray-2 h2, .bg-gray-2 .h2,
  .bg-gray-2 h3, .bg-gray-2 .h3,
  .bg-gray-2 h4, .bg-gray-2 .h4,
  .bg-gray-2 h5, .bg-gray-2 .h5 h6, .bg-gray-2 .h6 {
    color: inherit; }

.bg-gray-3 {
  background-color: #ced4ce;
  color: #1A1A19; }
  .bg-gray-3 h1, .bg-gray-3 .h1,
  .bg-gray-3 h2, .bg-gray-3 .h2,
  .bg-gray-3 h3, .bg-gray-3 .h3,
  .bg-gray-3 h4, .bg-gray-3 .h4,
  .bg-gray-3 h5, .bg-gray-3 .h5 h6, .bg-gray-3 .h6 {
    color: inherit; }

.bg-gray-4 {
  background-color: #bfc5bf;
  color: #1A1A19; }
  .bg-gray-4 h1, .bg-gray-4 .h1,
  .bg-gray-4 h2, .bg-gray-4 .h2,
  .bg-gray-4 h3, .bg-gray-4 .h3,
  .bg-gray-4 h4, .bg-gray-4 .h4,
  .bg-gray-4 h5, .bg-gray-4 .h5 h6, .bg-gray-4 .h6 {
    color: inherit; }

.bg-gray-5 {
  background-color: #aeb4ae;
  color: #1A1A19; }
  .bg-gray-5 h1, .bg-gray-5 .h1,
  .bg-gray-5 h2, .bg-gray-5 .h2,
  .bg-gray-5 h3, .bg-gray-5 .h3,
  .bg-gray-5 h4, .bg-gray-5 .h4,
  .bg-gray-5 h5, .bg-gray-5 .h5 h6, .bg-gray-5 .h6 {
    color: inherit; }

.bg-gray-6 {
  background-color: #9ca19c;
  color: #1A1A19; }
  .bg-gray-6 h1, .bg-gray-6 .h1,
  .bg-gray-6 h2, .bg-gray-6 .h2,
  .bg-gray-6 h3, .bg-gray-6 .h3,
  .bg-gray-6 h4, .bg-gray-6 .h4,
  .bg-gray-6 h5, .bg-gray-6 .h5 h6, .bg-gray-6 .h6 {
    color: inherit; }

.bg-gray-7 {
  background-color: #858a85;
  color: #FFFFFF; }
  .bg-gray-7 a, .bg-gray-7 a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-gray-7 a:visited {
    color: #fff; }
  .bg-gray-7 a:focus, .bg-gray-7 a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-gray-7 a:active {
    color: #e3f2ff; }
  .bg-gray-7 h1, .bg-gray-7 .h1,
  .bg-gray-7 h2, .bg-gray-7 .h2,
  .bg-gray-7 h3, .bg-gray-7 .h3,
  .bg-gray-7 h4, .bg-gray-7 .h4,
  .bg-gray-7 h5, .bg-gray-7 .h5 h6, .bg-gray-7 .h6 {
    color: inherit; }

.bg-gray-8 {
  background-color: #696c69;
  color: #FFFFFF; }
  .bg-gray-8 a, .bg-gray-8 a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-gray-8 a:visited {
    color: #fff; }
  .bg-gray-8 a:focus, .bg-gray-8 a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-gray-8 a:active {
    color: #e3f2ff; }
  .bg-gray-8 h1, .bg-gray-8 .h1,
  .bg-gray-8 h2, .bg-gray-8 .h2,
  .bg-gray-8 h3, .bg-gray-8 .h3,
  .bg-gray-8 h4, .bg-gray-8 .h4,
  .bg-gray-8 h5, .bg-gray-8 .h5 h6, .bg-gray-8 .h6 {
    color: inherit; }

.bg-gray-9 {
  background-color: #3d3f3d;
  color: #FFFFFF; }
  .bg-gray-9 a, .bg-gray-9 a:link {
    color: #fff;
    text-decoration: underline; }
  .bg-gray-9 a:visited {
    color: #fff; }
  .bg-gray-9 a:focus, .bg-gray-9 a:hover {
    color: #e3f2ff;
    text-decoration: none;
    border: none;
    background: transparent; }
  .bg-gray-9 a:active {
    color: #e3f2ff; }
  .bg-gray-9 h1, .bg-gray-9 .h1,
  .bg-gray-9 h2, .bg-gray-9 .h2,
  .bg-gray-9 h3, .bg-gray-9 .h3,
  .bg-gray-9 h4, .bg-gray-9 .h4,
  .bg-gray-9 h5, .bg-gray-9 .h5 h6, .bg-gray-9 .h6 {
    color: inherit; }

/*
Gutter modifiers

The presence of this class cuts the `$gutter` by half or quarter.

Applies to `.m` and `.p` classes.

Markup:
<p class="{{modifier_class}} pl bl ml">My gutter variable is smaller</p>

.half-gutter        - Sets gutter to a half
.quarter-gutter     - Sets gutter to a quarter

Styleguide Huesitos.gutter-modifier
*/
.half-gutter.m {
  margin: 0.675rem; }

.half-gutter.mt {
  margin-top: 0.675rem; }

.half-gutter.mr {
  margin-right: 0.675rem; }

.half-gutter.mb {
  margin-bottom: 0.675rem; }

.half-gutter.ml {
  margin-left: 0.675rem; }

.half-gutter.p {
  padding: 0.675rem; }

.half-gutter.pt {
  padding-top: 0.675rem; }

.half-gutter.pr, .half-gutter.selectr-tag {
  padding-right: 0.675rem; }

.half-gutter.pb {
  padding-bottom: 0.675rem; }

.half-gutter.pl {
  padding-left: 0.675rem; }

.quarter-gutter.m {
  margin: 0.3375rem; }

.quarter-gutter.mt {
  margin-top: 0.3375rem; }

.quarter-gutter.mr {
  margin-right: 0.3375rem; }

.quarter-gutter.mb {
  margin-bottom: 0.3375rem; }

.quarter-gutter.ml {
  margin-left: 0.3375rem; }

.quarter-gutter.p {
  padding: 0.3375rem; }

.quarter-gutter.pt {
  padding-top: 0.3375rem; }

.quarter-gutter.pr, .quarter-gutter.selectr-tag {
  padding-right: 0.3375rem; }

.quarter-gutter.pb {
  padding-bottom: 0.3375rem; }

.quarter-gutter.pl {
  padding-left: 0.3375rem; }

/*!
 * Selectr 2.4.4
 * http://mobius.ovh/docs/selectr
 *
 * Released under the MIT license
 */
.selectr-container {
  position: relative; }

.selectr-container li {
  list-style: none; }

.selectr-visible {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 11; }

.selectr-desktop.multiple .selectr-visible {
  display: none; }

.selectr-desktop.multiple.native-open .selectr-visible {
  top: 100%;
  min-height: 200px !important;
  height: auto;
  opacity: 1;
  display: block; }

.selectr-container.multiple.selectr-mobile .selectr-selected {
  z-index: 0; }

.selectr-selected {
  position: relative;
  z-index: 1;
  box-sizing: border-box;
  width: 100%;
  cursor: pointer;
  border: 1px solid #dbe2db;
  border-radius: 0px;
  background-color: #fff; }

.selectr-selected .selectr-label {
  padding: 0.3375rem 0.675rem; }

.selectr-selected::before {
  position: absolute;
  top: 50%;
  right: 10px;
  width: 0;
  height: 0;
  content: '';
  -o-transform: rotate(0deg) translate3d(0px, -50%, 0px);
  -ms-transform: rotate(0deg) translate3d(0px, -50%, 0px);
  -moz-transform: rotate(0deg) translate3d(0px, -50%, 0px);
  -webkit-transform: rotate(0deg) translate3d(0px, -50%, 0px);
  transform: rotate(0deg) translate3d(0px, -50%, 0px);
  border-width: 4px 4px 0 4px;
  border-style: solid;
  border-color: #dbe2db transparent transparent; }

.selectr-container.open .selectr-selected::before,
.selectr-container.native-open .selectr-selected::before {
  border-width: 0 4px 4px 4px;
  border-style: solid;
  border-color: transparent transparent #6c7a86; }

.selectr-label {
  display: none;
  overflow: hidden;
  width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis; }

.selectr-placeholder {
  color: #dbe2db;
  padding: 0.3375rem 0.675rem; }

.selectr-tags {
  margin: 0;
  padding: 0;
  white-space: normal; }

.has-selected .selectr-tags {
  margin: 0 0 -2px; }

.selectr-tag {
  list-style: none;
  position: relative;
  float: left;
  cursor: default; }

.selectr-container.multiple.has-selected .selectr-selected {
  padding: 5px 28px 5px 5px; }

.selectr-options-container {
  position: absolute;
  z-index: 10000;
  top: calc(100% - 1px);
  left: 0;
  display: none;
  box-sizing: border-box;
  width: 100%;
  border-width: 0 1px 1px;
  border-style: solid;
  border-color: transparent #dbe2db #dbe2db;
  border-radius: 0px;
  background-color: #fff; }

.selectr-container.open .selectr-options-container {
  display: block; }

.selectr-input-container {
  position: relative;
  display: none; }

.selectr-clear,
.selectr-input-clear,
.selectr-tag-remove {
  position: absolute;
  top: 50%;
  right: 2px;
  width: 0.9rem;
  height: 0.9rem;
  padding: 0;
  cursor: pointer;
  -o-transform: translate3d(0px, -50%, 0px);
  -ms-transform: translate3d(0px, -50%, 0px);
  -moz-transform: translate3d(0px, -50%, 0px);
  -webkit-transform: translate3d(0px, -50%, 0px);
  transform: translate3d(0px, -50%, 0px);
  border: medium none;
  background-color: transparent;
  z-index: 11; }
  .selectr-clear:hover, .selectr-clear:focus,
  .selectr-input-clear:hover,
  .selectr-input-clear:focus,
  .selectr-tag-remove:hover,
  .selectr-tag-remove:focus {
    background-color: #ffc4c8;
    color: #1A1A19; }

.selectr-clear,
.selectr-input-clear {
  display: none; }

.selectr-container.has-selected .selectr-clear,
.selectr-input-container.active .selectr-input-clear {
  display: block; }

.selectr-selected .selectr-tag-remove {
  right: 2px; }

.selectr-clear::before,
.selectr-clear::after,
.selectr-input-clear::before,
.selectr-input-clear::after,
.selectr-tag-remove::before,
.selectr-tag-remove::after {
  position: absolute;
  top: 5px;
  left: 9px;
  width: 2px;
  height: 10px;
  content: ' ';
  background-color: #6c7a86; }

.selectr-tag-remove::before,
.selectr-tag-remove::after {
  top: 0.1125rem;
  left: 50%;
  width: 2px;
  margin-left: -1px;
  height: 0.675rem;
  background-color: #fff; }

.selectr-clear:before,
.selectr-input-clear::before,
.selectr-tag-remove::before {
  -o-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg); }

.selectr-clear:after,
.selectr-input-clear::after,
.selectr-tag-remove::after {
  -o-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg); }

.selectr-input-container.active,
.selectr-input-container.active .selectr-clear {
  display: block; }

input.selectr-input {
  box-sizing: border-box;
  width: 100%;
  width: calc(100% - (1.35rem));
  margin: 0.675rem; }

.selectr-notice {
  display: none;
  box-sizing: border-box;
  width: 100%;
  padding: 8px 16px;
  border-top: 1px solid #dbe2db;
  border-radius: 0 0 3px 3px;
  background-color: #fff; }

.selectr-container.notice .selectr-notice {
  display: block; }

.selectr-container.notice .selectr-selected {
  border-radius: 3px 3px 0 0; }

.selectr-options {
  position: relative;
  top: calc(100% + 2px);
  display: none;
  overflow-x: auto;
  overflow-y: scroll;
  max-height: 200px;
  margin: 0 0.675rem 0.675rem 0.675rem;
  padding: 0; }

.selectr-container.open .selectr-options,
.selectr-container.open .selectr-input-container,
.selectr-container.notice .selectr-options-container {
  display: block; }

.selectr-option {
  position: relative;
  display: block;
  padding: 0.3375rem 0.675rem;
  margin: 0;
  list-style: outside none none;
  cursor: pointer;
  font-weight: normal; }

.selectr-options.optgroups > .selectr-option {
  padding-left: 25px; }

.selectr-optgroup {
  font-weight: bold;
  padding: 0;
  margin-bottom: 0.675rem; }

.selectr-optgroup--label {
  font-weight: bold;
  padding: 0.3375rem 0.675rem;
  font-size: 12px;
  font-size: 0.75019rem;
  line-height: 16px;
  line-height: 1.0125rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.05em; }

.selectr-match {
  text-decoration: underline; }

.selectr-option.selected {
  background-color: #dbe2db;
  color: #1A1A19; }

.selectr-option.active {
  background-color: #dbe2db;
  color: #1A1A19; }

.selectr-option.disabled {
  opacity: 0.4; }

.selectr-option.excluded {
  display: none; }

.selectr-container.open .selectr-selected {
  border-color: #dbe2db #dbe2db transparent #dbe2db;
  border-radius: 0px 0px 0 0; }

.selectr-container.open .selectr-selected::after {
  -o-transform: rotate(180deg) translate3d(0px, 50%, 0px);
  -ms-transform: rotate(180deg) translate3d(0px, 50%, 0px);
  -moz-transform: rotate(180deg) translate3d(0px, 50%, 0px);
  -webkit-transform: rotate(180deg) translate3d(0px, 50%, 0px);
  transform: rotate(180deg) translate3d(0px, 50%, 0px); }

.selectr-disabled {
  opacity: .6; }

.selectr-empty,
.has-selected .selectr-placeholder {
  display: none; }

.has-selected .selectr-label {
  display: block; }

/* TAGGABLE */
.taggable .selectr-selected {
  padding: 4px 28px 4px 4px; }

.taggable .selectr-selected::after {
  display: table;
  content: " ";
  clear: both; }

.taggable .selectr-label {
  width: auto; }

.taggable .selectr-tags {
  float: left;
  display: block; }

.taggable .selectr-placeholder {
  display: none; }

.input-tag {
  float: left;
  min-width: 90px;
  width: auto; }

.selectr-tag-input {
  border: medium none;
  padding: 3px 10px;
  width: 100%;
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit; }

.selectr-input-container.loading::after {
  position: absolute;
  top: 50%;
  right: 20px;
  width: 20px;
  height: 20px;
  content: '';
  -o-transform: translate3d(0px, -50%, 0px);
  -ms-transform: translate3d(0px, -50%, 0px);
  -moz-transform: translate3d(0px, -50%, 0px);
  -webkit-transform: translate3d(0px, -50%, 0px);
  transform: translate3d(0px, -50%, 0px);
  -o-transform-origin: 50% 0 0;
  -ms-transform-origin: 50% 0 0;
  -moz-transform-origin: 50% 0 0;
  -webkit-transform-origin: 50% 0 0;
  transform-origin: 50% 0 0;
  -moz-animation: 500ms linear 0s normal forwards infinite running spin;
  -webkit-animation: 500ms linear 0s normal forwards infinite running spin;
  animation: 500ms linear 0s normal forwards infinite running spin;
  border-width: 3px;
  border-style: solid;
  border-color: #aaa #ddd #ddd;
  border-radius: 50%; }

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg) translate3d(0px, -50%, 0px);
    transform: rotate(0deg) translate3d(0px, -50%, 0px); }
  100% {
    -webkit-transform: rotate(360deg) translate3d(0px, -50%, 0px);
    transform: rotate(360deg) translate3d(0px, -50%, 0px); } }

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg) translate3d(0px, -50%, 0px);
    transform: rotate(0deg) translate3d(0px, -50%, 0px); }
  100% {
    -webkit-transform: rotate(360deg) translate3d(0px, -50%, 0px);
    transform: rotate(360deg) translate3d(0px, -50%, 0px); } }

.selectr-container.open.inverted .selectr-selected {
  border-color: #e7ece7 #dbe2db #dbe2db;
  border-radius: 0 0 0px 0px; }

.selectr-container.inverted .selectr-options-container {
  border-width: 1px 1px 0;
  border-color: #dbe2db #dbe2db transparent;
  border-radius: 0px 0px 0 0;
  background-color: #fff; }

.selectr-container.inverted .selectr-options-container {
  top: auto;
  bottom: 100%; }

.selectr-container ::-webkit-input-placeholder {
  color: #6c7a86;
  opacity: 1; }

.selectr-container ::-moz-placeholder {
  color: #6c7a86;
  opacity: 1; }

.selectr-container :-ms-input-placeholder {
  color: #6c7a86;
  opacity: 1; }

.selectr-container ::placeholder {
  color: #6c7a86;
  opacity: 1; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
